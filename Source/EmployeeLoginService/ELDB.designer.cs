#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeLoginService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EmployeeLoginServer")]
	public partial class ELDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranchType(BranchType instance);
    partial void UpdateBranchType(BranchType instance);
    partial void DeleteBranchType(BranchType instance);
    partial void InsertWeeklyTiming(WeeklyTiming instance);
    partial void UpdateWeeklyTiming(WeeklyTiming instance);
    partial void DeleteWeeklyTiming(WeeklyTiming instance);
    partial void InsertBreak(Break instance);
    partial void UpdateBreak(Break instance);
    partial void DeleteBreak(Break instance);
    partial void InsertBreakCategory(BreakCategory instance);
    partial void UpdateBreakCategory(BreakCategory instance);
    partial void DeleteBreakCategory(BreakCategory instance);
    partial void InsertBreakType(BreakType instance);
    partial void UpdateBreakType(BreakType instance);
    partial void DeleteBreakType(BreakType instance);
    partial void InsertCallIn(CallIn instance);
    partial void UpdateCallIn(CallIn instance);
    partial void DeleteCallIn(CallIn instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCompanyBranch(CompanyBranch instance);
    partial void UpdateCompanyBranch(CompanyBranch instance);
    partial void DeleteCompanyBranch(CompanyBranch instance);
    partial void InsertCompanyLeaveTypeCount(CompanyLeaveTypeCount instance);
    partial void UpdateCompanyLeaveTypeCount(CompanyLeaveTypeCount instance);
    partial void DeleteCompanyLeaveTypeCount(CompanyLeaveTypeCount instance);
    partial void InsertCompanyMaster(CompanyMaster instance);
    partial void UpdateCompanyMaster(CompanyMaster instance);
    partial void DeleteCompanyMaster(CompanyMaster instance);
    partial void InsertCompanyWeekOffDay(CompanyWeekOffDay instance);
    partial void UpdateCompanyWeekOffDay(CompanyWeekOffDay instance);
    partial void DeleteCompanyWeekOffDay(CompanyWeekOffDay instance);
    partial void InsertComponent(Component instance);
    partial void UpdateComponent(Component instance);
    partial void DeleteComponent(Component instance);
    partial void InsertEmployeeAddress(EmployeeAddress instance);
    partial void UpdateEmployeeAddress(EmployeeAddress instance);
    partial void DeleteEmployeeAddress(EmployeeAddress instance);
    partial void InsertEmployeeBankDetail(EmployeeBankDetail instance);
    partial void UpdateEmployeeBankDetail(EmployeeBankDetail instance);
    partial void DeleteEmployeeBankDetail(EmployeeBankDetail instance);
    partial void InsertEmployeeEducationDetail(EmployeeEducationDetail instance);
    partial void UpdateEmployeeEducationDetail(EmployeeEducationDetail instance);
    partial void DeleteEmployeeEducationDetail(EmployeeEducationDetail instance);
    partial void InsertEmployeeFamily(EmployeeFamily instance);
    partial void UpdateEmployeeFamily(EmployeeFamily instance);
    partial void DeleteEmployeeFamily(EmployeeFamily instance);
    partial void InsertEmployeeMaster(EmployeeMaster instance);
    partial void UpdateEmployeeMaster(EmployeeMaster instance);
    partial void DeleteEmployeeMaster(EmployeeMaster instance);
    partial void InsertGroupAccess(GroupAccess instance);
    partial void UpdateGroupAccess(GroupAccess instance);
    partial void DeleteGroupAccess(GroupAccess instance);
    partial void InsertGroupMaster(GroupMaster instance);
    partial void UpdateGroupMaster(GroupMaster instance);
    partial void DeleteGroupMaster(GroupMaster instance);
    partial void InsertHalfDay(HalfDay instance);
    partial void UpdateHalfDay(HalfDay instance);
    partial void DeleteHalfDay(HalfDay instance);
    partial void InsertHoliday(Holiday instance);
    partial void UpdateHoliday(Holiday instance);
    partial void DeleteHoliday(Holiday instance);
    partial void InsertLeave(Leave instance);
    partial void UpdateLeave(Leave instance);
    partial void DeleteLeave(Leave instance);
    partial void InsertLeaveApprovalType(LeaveApprovalType instance);
    partial void UpdateLeaveApprovalType(LeaveApprovalType instance);
    partial void DeleteLeaveApprovalType(LeaveApprovalType instance);
    partial void InsertLeaveType(LeaveType instance);
    partial void UpdateLeaveType(LeaveType instance);
    partial void DeleteLeaveType(LeaveType instance);
    partial void InsertLocationPin(LocationPin instance);
    partial void UpdateLocationPin(LocationPin instance);
    partial void DeleteLocationPin(LocationPin instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertOfficialLeave(OfficialLeave instance);
    partial void UpdateOfficialLeave(OfficialLeave instance);
    partial void DeleteOfficialLeave(OfficialLeave instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPunchIn(PunchIn instance);
    partial void UpdatePunchIn(PunchIn instance);
    partial void DeletePunchIn(PunchIn instance);
    partial void InsertRoleMaster(RoleMaster instance);
    partial void UpdateRoleMaster(RoleMaster instance);
    partial void DeleteRoleMaster(RoleMaster instance);
    partial void InsertSystemSetting(SystemSetting instance);
    partial void UpdateSystemSetting(SystemSetting instance);
    partial void DeleteSystemSetting(SystemSetting instance);
    partial void InsertUserAccess(UserAccess instance);
    partial void UpdateUserAccess(UserAccess instance);
    partial void DeleteUserAccess(UserAccess instance);
    partial void InsertUserComponentRight(UserComponentRight instance);
    partial void UpdateUserComponentRight(UserComponentRight instance);
    partial void DeleteUserComponentRight(UserComponentRight instance);
    partial void InsertUserDevice(UserDevice instance);
    partial void UpdateUserDevice(UserDevice instance);
    partial void DeleteUserDevice(UserDevice instance);
    partial void InsertUserLeaveApproval(UserLeaveApproval instance);
    partial void UpdateUserLeaveApproval(UserLeaveApproval instance);
    partial void DeleteUserLeaveApproval(UserLeaveApproval instance);
    partial void InsertUserLeaveTypeCount(UserLeaveTypeCount instance);
    partial void UpdateUserLeaveTypeCount(UserLeaveTypeCount instance);
    partial void DeleteUserLeaveTypeCount(UserLeaveTypeCount instance);
    partial void InsertUserLocation(UserLocation instance);
    partial void UpdateUserLocation(UserLocation instance);
    partial void DeleteUserLocation(UserLocation instance);
    partial void InsertUserRight(UserRight instance);
    partial void UpdateUserRight(UserRight instance);
    partial void DeleteUserRight(UserRight instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserWeekOffDay(UserWeekOffDay instance);
    partial void UpdateUserWeekOffDay(UserWeekOffDay instance);
    partial void DeleteUserWeekOffDay(UserWeekOffDay instance);
    partial void InsertVersionMaster(VersionMaster instance);
    partial void UpdateVersionMaster(VersionMaster instance);
    partial void DeleteVersionMaster(VersionMaster instance);
    partial void InsertUsersOTP(UsersOTP instance);
    partial void UpdateUsersOTP(UsersOTP instance);
    partial void DeleteUsersOTP(UsersOTP instance);
    #endregion
		
		public ELDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EmployeeLoginConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ELDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ELDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ELDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ELDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BranchType> BranchTypes
		{
			get
			{
				return this.GetTable<BranchType>();
			}
		}
		
		public System.Data.Linq.Table<WeeklyTiming> WeeklyTimings
		{
			get
			{
				return this.GetTable<WeeklyTiming>();
			}
		}
		
		public System.Data.Linq.Table<Break> Breaks
		{
			get
			{
				return this.GetTable<Break>();
			}
		}
		
		public System.Data.Linq.Table<BreakCategory> BreakCategories
		{
			get
			{
				return this.GetTable<BreakCategory>();
			}
		}
		
		public System.Data.Linq.Table<BreakType> BreakTypes
		{
			get
			{
				return this.GetTable<BreakType>();
			}
		}
		
		public System.Data.Linq.Table<CallIn> CallIns
		{
			get
			{
				return this.GetTable<CallIn>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<CompanyBranch> CompanyBranches
		{
			get
			{
				return this.GetTable<CompanyBranch>();
			}
		}
		
		public System.Data.Linq.Table<CompanyLeaveTypeCount> CompanyLeaveTypeCounts
		{
			get
			{
				return this.GetTable<CompanyLeaveTypeCount>();
			}
		}
		
		public System.Data.Linq.Table<CompanyMaster> CompanyMasters
		{
			get
			{
				return this.GetTable<CompanyMaster>();
			}
		}
		
		public System.Data.Linq.Table<CompanyWeekOffDay> CompanyWeekOffDays
		{
			get
			{
				return this.GetTable<CompanyWeekOffDay>();
			}
		}
		
		public System.Data.Linq.Table<Component> Components
		{
			get
			{
				return this.GetTable<Component>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAddress> EmployeeAddresses
		{
			get
			{
				return this.GetTable<EmployeeAddress>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeBankDetail> EmployeeBankDetails
		{
			get
			{
				return this.GetTable<EmployeeBankDetail>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeEducationDetail> EmployeeEducationDetails
		{
			get
			{
				return this.GetTable<EmployeeEducationDetail>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeFamily> EmployeeFamilies
		{
			get
			{
				return this.GetTable<EmployeeFamily>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeMaster> EmployeeMasters
		{
			get
			{
				return this.GetTable<EmployeeMaster>();
			}
		}
		
		public System.Data.Linq.Table<EmployeePersonalID> EmployeePersonalIDs
		{
			get
			{
				return this.GetTable<EmployeePersonalID>();
			}
		}
		
		public System.Data.Linq.Table<GroupAccess> GroupAccesses
		{
			get
			{
				return this.GetTable<GroupAccess>();
			}
		}
		
		public System.Data.Linq.Table<GroupMaster> GroupMasters
		{
			get
			{
				return this.GetTable<GroupMaster>();
			}
		}
		
		public System.Data.Linq.Table<HalfDay> HalfDays
		{
			get
			{
				return this.GetTable<HalfDay>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<Leave> Leaves
		{
			get
			{
				return this.GetTable<Leave>();
			}
		}
		
		public System.Data.Linq.Table<LeaveApprovalType> LeaveApprovalTypes
		{
			get
			{
				return this.GetTable<LeaveApprovalType>();
			}
		}
		
		public System.Data.Linq.Table<LeaveType> LeaveTypes
		{
			get
			{
				return this.GetTable<LeaveType>();
			}
		}
		
		public System.Data.Linq.Table<LocationPin> LocationPins
		{
			get
			{
				return this.GetTable<LocationPin>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<OfficialLeave> OfficialLeaves
		{
			get
			{
				return this.GetTable<OfficialLeave>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PunchIn> PunchIns
		{
			get
			{
				return this.GetTable<PunchIn>();
			}
		}
		
		public System.Data.Linq.Table<RoleMaster> RoleMasters
		{
			get
			{
				return this.GetTable<RoleMaster>();
			}
		}
		
		public System.Data.Linq.Table<SystemSetting> SystemSettings
		{
			get
			{
				return this.GetTable<SystemSetting>();
			}
		}
		
		public System.Data.Linq.Table<UserAccess> UserAccesses
		{
			get
			{
				return this.GetTable<UserAccess>();
			}
		}
		
		public System.Data.Linq.Table<UserComponentRight> UserComponentRights
		{
			get
			{
				return this.GetTable<UserComponentRight>();
			}
		}
		
		public System.Data.Linq.Table<UserDevice> UserDevices
		{
			get
			{
				return this.GetTable<UserDevice>();
			}
		}
		
		public System.Data.Linq.Table<UserLeaveApproval> UserLeaveApprovals
		{
			get
			{
				return this.GetTable<UserLeaveApproval>();
			}
		}
		
		public System.Data.Linq.Table<UserLeaveTypeCount> UserLeaveTypeCounts
		{
			get
			{
				return this.GetTable<UserLeaveTypeCount>();
			}
		}
		
		public System.Data.Linq.Table<UserLocation> UserLocations
		{
			get
			{
				return this.GetTable<UserLocation>();
			}
		}
		
		public System.Data.Linq.Table<UserRight> UserRights
		{
			get
			{
				return this.GetTable<UserRight>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserWeekOffDay> UserWeekOffDays
		{
			get
			{
				return this.GetTable<UserWeekOffDay>();
			}
		}
		
		public System.Data.Linq.Table<VersionMaster> VersionMasters
		{
			get
			{
				return this.GetTable<VersionMaster>();
			}
		}
		
		public System.Data.Linq.Table<UsersOTP> UsersOTPs
		{
			get
			{
				return this.GetTable<UsersOTP>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUserHierarchyWise")]
		public ISingleResult<GetUserHierarchyWiseResult> GetUserHierarchyWise([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_UserId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_UserId);
			return ((ISingleResult<GetUserHierarchyWiseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEmployeeHeirarchy")]
		public ISingleResult<GetEmployeeHeirarchyResult> GetEmployeeHeirarchy([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string p_Command, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_UserID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_CompanyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_Command, p_UserID, p_CompanyID);
			return ((ISingleResult<GetEmployeeHeirarchyResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchType")]
	public partial class BranchType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _BranchTypeID;
		
		private string _BranchType1;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchTypeIDChanging(byte value);
    partial void OnBranchTypeIDChanged();
    partial void OnBranchType1Changing(string value);
    partial void OnBranchType1Changed();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public BranchType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchTypeID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte BranchTypeID
		{
			get
			{
				return this._BranchTypeID;
			}
			set
			{
				if ((this._BranchTypeID != value))
				{
					this.OnBranchTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BranchTypeID = value;
					this.SendPropertyChanged("BranchTypeID");
					this.OnBranchTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BranchType", Storage="_BranchType1", DbType="NVarChar(100)")]
		public string BranchType1
		{
			get
			{
				return this._BranchType1;
			}
			set
			{
				if ((this._BranchType1 != value))
				{
					this.OnBranchType1Changing(value);
					this.SendPropertyChanging();
					this._BranchType1 = value;
					this.SendPropertyChanged("BranchType1");
					this.OnBranchType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeeklyTimings")]
	public partial class WeeklyTiming : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<byte> _TimingFor;
		
		private System.Nullable<long> _ObjectId;
		
		private string _TimingType;
		
		private string _Day;
		
		private System.Nullable<byte> _DayType;
		
		private System.DateTime _TimeFrom;
		
		private System.DateTime _TimeUpto;
		
		private System.TimeSpan _WorkingHours;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnTimingForChanging(System.Nullable<byte> value);
    partial void OnTimingForChanged();
    partial void OnObjectIdChanging(System.Nullable<long> value);
    partial void OnObjectIdChanged();
    partial void OnTimingTypeChanging(string value);
    partial void OnTimingTypeChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnDayTypeChanging(System.Nullable<byte> value);
    partial void OnDayTypeChanged();
    partial void OnTimeFromChanging(System.DateTime value);
    partial void OnTimeFromChanged();
    partial void OnTimeUptoChanging(System.DateTime value);
    partial void OnTimeUptoChanged();
    partial void OnWorkingHoursChanging(System.TimeSpan value);
    partial void OnWorkingHoursChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public WeeklyTiming()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimingFor", DbType="TinyInt")]
		public System.Nullable<byte> TimingFor
		{
			get
			{
				return this._TimingFor;
			}
			set
			{
				if ((this._TimingFor != value))
				{
					this.OnTimingForChanging(value);
					this.SendPropertyChanging();
					this._TimingFor = value;
					this.SendPropertyChanged("TimingFor");
					this.OnTimingForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt")]
		public System.Nullable<long> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimingType", DbType="NVarChar(50)")]
		public string TimingType
		{
			get
			{
				return this._TimingType;
			}
			set
			{
				if ((this._TimingType != value))
				{
					this.OnTimingTypeChanging(value);
					this.SendPropertyChanging();
					this._TimingType = value;
					this.SendPropertyChanged("TimingType");
					this.OnTimingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="NVarChar(20)")]
		public string Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayType", DbType="TinyInt")]
		public System.Nullable<byte> DayType
		{
			get
			{
				return this._DayType;
			}
			set
			{
				if ((this._DayType != value))
				{
					this.OnDayTypeChanging(value);
					this.SendPropertyChanging();
					this._DayType = value;
					this.SendPropertyChanged("DayType");
					this.OnDayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrom", DbType="DateTime NOT NULL")]
		public System.DateTime TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this.OnTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TimeFrom = value;
					this.SendPropertyChanged("TimeFrom");
					this.OnTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUpto", DbType="DateTime NOT NULL")]
		public System.DateTime TimeUpto
		{
			get
			{
				return this._TimeUpto;
			}
			set
			{
				if ((this._TimeUpto != value))
				{
					this.OnTimeUptoChanging(value);
					this.SendPropertyChanging();
					this._TimeUpto = value;
					this.SendPropertyChanged("TimeUpto");
					this.OnTimeUptoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="Time NOT NULL")]
		public System.TimeSpan WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this.OnWorkingHoursChanging(value);
					this.SendPropertyChanging();
					this._WorkingHours = value;
					this.SendPropertyChanged("WorkingHours");
					this.OnWorkingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Break]")]
	public partial class Break : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BreakId;
		
		private int _UserId;
		
		private System.DateTime _BreakinTime;
		
		private System.Nullable<System.DateTime> _BreakoutTime;
		
		private System.Nullable<bool> _BreakinType;
		
		private System.Nullable<int> _BILocationId;
		
		private string _BILatitudeLongitude;
		
		private System.Nullable<bool> _BreakoutType;
		
		private System.Nullable<int> _BOLocationId;
		
		private string _BOLatitudeLongitude;
		
		private string _BreakinOutsideLocationReason;
		
		private string _BreakoutOutsideLocationReason;
		
		private bool _SystemBreakout;
		
		private string _BreakinDeviceId;
		
		private string _BreakoutDeviceId;
		
		private int _BreakTypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBreakIdChanging(int value);
    partial void OnBreakIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnBreakinTimeChanging(System.DateTime value);
    partial void OnBreakinTimeChanged();
    partial void OnBreakoutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnBreakoutTimeChanged();
    partial void OnBreakinTypeChanging(System.Nullable<bool> value);
    partial void OnBreakinTypeChanged();
    partial void OnBILocationIdChanging(System.Nullable<int> value);
    partial void OnBILocationIdChanged();
    partial void OnBILatitudeLongitudeChanging(string value);
    partial void OnBILatitudeLongitudeChanged();
    partial void OnBreakoutTypeChanging(System.Nullable<bool> value);
    partial void OnBreakoutTypeChanged();
    partial void OnBOLocationIdChanging(System.Nullable<int> value);
    partial void OnBOLocationIdChanged();
    partial void OnBOLatitudeLongitudeChanging(string value);
    partial void OnBOLatitudeLongitudeChanged();
    partial void OnBreakinOutsideLocationReasonChanging(string value);
    partial void OnBreakinOutsideLocationReasonChanged();
    partial void OnBreakoutOutsideLocationReasonChanging(string value);
    partial void OnBreakoutOutsideLocationReasonChanged();
    partial void OnSystemBreakoutChanging(bool value);
    partial void OnSystemBreakoutChanged();
    partial void OnBreakinDeviceIdChanging(string value);
    partial void OnBreakinDeviceIdChanged();
    partial void OnBreakoutDeviceIdChanging(string value);
    partial void OnBreakoutDeviceIdChanged();
    partial void OnBreakTypeIdChanging(int value);
    partial void OnBreakTypeIdChanged();
    #endregion
		
		public Break()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BreakId
		{
			get
			{
				return this._BreakId;
			}
			set
			{
				if ((this._BreakId != value))
				{
					this.OnBreakIdChanging(value);
					this.SendPropertyChanging();
					this._BreakId = value;
					this.SendPropertyChanged("BreakId");
					this.OnBreakIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakinTime", DbType="DateTime NOT NULL")]
		public System.DateTime BreakinTime
		{
			get
			{
				return this._BreakinTime;
			}
			set
			{
				if ((this._BreakinTime != value))
				{
					this.OnBreakinTimeChanging(value);
					this.SendPropertyChanging();
					this._BreakinTime = value;
					this.SendPropertyChanged("BreakinTime");
					this.OnBreakinTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakoutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> BreakoutTime
		{
			get
			{
				return this._BreakoutTime;
			}
			set
			{
				if ((this._BreakoutTime != value))
				{
					this.OnBreakoutTimeChanging(value);
					this.SendPropertyChanging();
					this._BreakoutTime = value;
					this.SendPropertyChanged("BreakoutTime");
					this.OnBreakoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakinType", DbType="Bit")]
		public System.Nullable<bool> BreakinType
		{
			get
			{
				return this._BreakinType;
			}
			set
			{
				if ((this._BreakinType != value))
				{
					this.OnBreakinTypeChanging(value);
					this.SendPropertyChanging();
					this._BreakinType = value;
					this.SendPropertyChanged("BreakinType");
					this.OnBreakinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BILocationId", DbType="Int")]
		public System.Nullable<int> BILocationId
		{
			get
			{
				return this._BILocationId;
			}
			set
			{
				if ((this._BILocationId != value))
				{
					this.OnBILocationIdChanging(value);
					this.SendPropertyChanging();
					this._BILocationId = value;
					this.SendPropertyChanged("BILocationId");
					this.OnBILocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BILatitudeLongitude", DbType="VarChar(50)")]
		public string BILatitudeLongitude
		{
			get
			{
				return this._BILatitudeLongitude;
			}
			set
			{
				if ((this._BILatitudeLongitude != value))
				{
					this.OnBILatitudeLongitudeChanging(value);
					this.SendPropertyChanging();
					this._BILatitudeLongitude = value;
					this.SendPropertyChanged("BILatitudeLongitude");
					this.OnBILatitudeLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakoutType", DbType="Bit")]
		public System.Nullable<bool> BreakoutType
		{
			get
			{
				return this._BreakoutType;
			}
			set
			{
				if ((this._BreakoutType != value))
				{
					this.OnBreakoutTypeChanging(value);
					this.SendPropertyChanging();
					this._BreakoutType = value;
					this.SendPropertyChanged("BreakoutType");
					this.OnBreakoutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOLocationId", DbType="Int")]
		public System.Nullable<int> BOLocationId
		{
			get
			{
				return this._BOLocationId;
			}
			set
			{
				if ((this._BOLocationId != value))
				{
					this.OnBOLocationIdChanging(value);
					this.SendPropertyChanging();
					this._BOLocationId = value;
					this.SendPropertyChanged("BOLocationId");
					this.OnBOLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOLatitudeLongitude", DbType="VarChar(50)")]
		public string BOLatitudeLongitude
		{
			get
			{
				return this._BOLatitudeLongitude;
			}
			set
			{
				if ((this._BOLatitudeLongitude != value))
				{
					this.OnBOLatitudeLongitudeChanging(value);
					this.SendPropertyChanging();
					this._BOLatitudeLongitude = value;
					this.SendPropertyChanged("BOLatitudeLongitude");
					this.OnBOLatitudeLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakinOutsideLocationReason", DbType="VarChar(MAX)")]
		public string BreakinOutsideLocationReason
		{
			get
			{
				return this._BreakinOutsideLocationReason;
			}
			set
			{
				if ((this._BreakinOutsideLocationReason != value))
				{
					this.OnBreakinOutsideLocationReasonChanging(value);
					this.SendPropertyChanging();
					this._BreakinOutsideLocationReason = value;
					this.SendPropertyChanged("BreakinOutsideLocationReason");
					this.OnBreakinOutsideLocationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakoutOutsideLocationReason", DbType="VarChar(MAX)")]
		public string BreakoutOutsideLocationReason
		{
			get
			{
				return this._BreakoutOutsideLocationReason;
			}
			set
			{
				if ((this._BreakoutOutsideLocationReason != value))
				{
					this.OnBreakoutOutsideLocationReasonChanging(value);
					this.SendPropertyChanging();
					this._BreakoutOutsideLocationReason = value;
					this.SendPropertyChanged("BreakoutOutsideLocationReason");
					this.OnBreakoutOutsideLocationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemBreakout", DbType="Bit NOT NULL")]
		public bool SystemBreakout
		{
			get
			{
				return this._SystemBreakout;
			}
			set
			{
				if ((this._SystemBreakout != value))
				{
					this.OnSystemBreakoutChanging(value);
					this.SendPropertyChanging();
					this._SystemBreakout = value;
					this.SendPropertyChanged("SystemBreakout");
					this.OnSystemBreakoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakinDeviceId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BreakinDeviceId
		{
			get
			{
				return this._BreakinDeviceId;
			}
			set
			{
				if ((this._BreakinDeviceId != value))
				{
					this.OnBreakinDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._BreakinDeviceId = value;
					this.SendPropertyChanged("BreakinDeviceId");
					this.OnBreakinDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakoutDeviceId", DbType="VarChar(50)")]
		public string BreakoutDeviceId
		{
			get
			{
				return this._BreakoutDeviceId;
			}
			set
			{
				if ((this._BreakoutDeviceId != value))
				{
					this.OnBreakoutDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._BreakoutDeviceId = value;
					this.SendPropertyChanged("BreakoutDeviceId");
					this.OnBreakoutDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakTypeId", DbType="Int NOT NULL")]
		public int BreakTypeId
		{
			get
			{
				return this._BreakTypeId;
			}
			set
			{
				if ((this._BreakTypeId != value))
				{
					this.OnBreakTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BreakTypeId = value;
					this.SendPropertyChanged("BreakTypeId");
					this.OnBreakTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BreakCategory")]
	public partial class BreakCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BreakCategoryId;
		
		private string _BreakCategoryName;
		
		private bool _HasTextbox;
		
		private bool _IsActive;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBreakCategoryIdChanging(int value);
    partial void OnBreakCategoryIdChanged();
    partial void OnBreakCategoryNameChanging(string value);
    partial void OnBreakCategoryNameChanged();
    partial void OnHasTextboxChanging(bool value);
    partial void OnHasTextboxChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public BreakCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BreakCategoryId
		{
			get
			{
				return this._BreakCategoryId;
			}
			set
			{
				if ((this._BreakCategoryId != value))
				{
					this.OnBreakCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._BreakCategoryId = value;
					this.SendPropertyChanged("BreakCategoryId");
					this.OnBreakCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakCategoryName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BreakCategoryName
		{
			get
			{
				return this._BreakCategoryName;
			}
			set
			{
				if ((this._BreakCategoryName != value))
				{
					this.OnBreakCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._BreakCategoryName = value;
					this.SendPropertyChanged("BreakCategoryName");
					this.OnBreakCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTextbox", DbType="Bit NOT NULL")]
		public bool HasTextbox
		{
			get
			{
				return this._HasTextbox;
			}
			set
			{
				if ((this._HasTextbox != value))
				{
					this.OnHasTextboxChanging(value);
					this.SendPropertyChanging();
					this._HasTextbox = value;
					this.SendPropertyChanged("HasTextbox");
					this.OnHasTextboxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BreakType")]
	public partial class BreakType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BreakTypeId;
		
		private string _BreakTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBreakTypeIdChanging(int value);
    partial void OnBreakTypeIdChanged();
    partial void OnBreakTypeNameChanging(string value);
    partial void OnBreakTypeNameChanged();
    #endregion
		
		public BreakType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BreakTypeId
		{
			get
			{
				return this._BreakTypeId;
			}
			set
			{
				if ((this._BreakTypeId != value))
				{
					this.OnBreakTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BreakTypeId = value;
					this.SendPropertyChanged("BreakTypeId");
					this.OnBreakTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BreakTypeName
		{
			get
			{
				return this._BreakTypeName;
			}
			set
			{
				if ((this._BreakTypeName != value))
				{
					this.OnBreakTypeNameChanging(value);
					this.SendPropertyChanging();
					this._BreakTypeName = value;
					this.SendPropertyChanged("BreakTypeName");
					this.OnBreakTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallIn")]
	public partial class CallIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CId;
		
		private long _UserId;
		
		private System.DateTime _CallinTime;
		
		private System.Nullable<System.DateTime> _CalloutTime;
		
		private string _CallTitle;
		
		private System.Nullable<bool> _CallinType;
		
		private System.Nullable<int> _CILocationId;
		
		private string _CILatitudeLongitude;
		
		private System.Nullable<bool> _CalloutType;
		
		private System.Nullable<int> _COLocationId;
		
		private string _COLatitudeLongitude;
		
		private bool _SystemCallout;
		
		private string _CallTime;
		
		private string _CallinDeviceId;
		
		private string _CalloutDeviceId;
		
		private string _CallConclusion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIdChanging(long value);
    partial void OnCIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCallinTimeChanging(System.DateTime value);
    partial void OnCallinTimeChanged();
    partial void OnCalloutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCalloutTimeChanged();
    partial void OnCallTitleChanging(string value);
    partial void OnCallTitleChanged();
    partial void OnCallinTypeChanging(System.Nullable<bool> value);
    partial void OnCallinTypeChanged();
    partial void OnCILocationIdChanging(System.Nullable<int> value);
    partial void OnCILocationIdChanged();
    partial void OnCILatitudeLongitudeChanging(string value);
    partial void OnCILatitudeLongitudeChanged();
    partial void OnCalloutTypeChanging(System.Nullable<bool> value);
    partial void OnCalloutTypeChanged();
    partial void OnCOLocationIdChanging(System.Nullable<int> value);
    partial void OnCOLocationIdChanged();
    partial void OnCOLatitudeLongitudeChanging(string value);
    partial void OnCOLatitudeLongitudeChanged();
    partial void OnSystemCalloutChanging(bool value);
    partial void OnSystemCalloutChanged();
    partial void OnCallTimeChanging(string value);
    partial void OnCallTimeChanged();
    partial void OnCallinDeviceIdChanging(string value);
    partial void OnCallinDeviceIdChanged();
    partial void OnCalloutDeviceIdChanging(string value);
    partial void OnCalloutDeviceIdChanged();
    partial void OnCallConclusionChanging(string value);
    partial void OnCallConclusionChanged();
    #endregion
		
		public CallIn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CId
		{
			get
			{
				return this._CId;
			}
			set
			{
				if ((this._CId != value))
				{
					this.OnCIdChanging(value);
					this.SendPropertyChanging();
					this._CId = value;
					this.SendPropertyChanged("CId");
					this.OnCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallinTime", DbType="DateTime NOT NULL")]
		public System.DateTime CallinTime
		{
			get
			{
				return this._CallinTime;
			}
			set
			{
				if ((this._CallinTime != value))
				{
					this.OnCallinTimeChanging(value);
					this.SendPropertyChanging();
					this._CallinTime = value;
					this.SendPropertyChanged("CallinTime");
					this.OnCallinTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalloutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalloutTime
		{
			get
			{
				return this._CalloutTime;
			}
			set
			{
				if ((this._CalloutTime != value))
				{
					this.OnCalloutTimeChanging(value);
					this.SendPropertyChanging();
					this._CalloutTime = value;
					this.SendPropertyChanged("CalloutTime");
					this.OnCalloutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallTitle", DbType="NVarChar(300)")]
		public string CallTitle
		{
			get
			{
				return this._CallTitle;
			}
			set
			{
				if ((this._CallTitle != value))
				{
					this.OnCallTitleChanging(value);
					this.SendPropertyChanging();
					this._CallTitle = value;
					this.SendPropertyChanged("CallTitle");
					this.OnCallTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallinType", DbType="Bit")]
		public System.Nullable<bool> CallinType
		{
			get
			{
				return this._CallinType;
			}
			set
			{
				if ((this._CallinType != value))
				{
					this.OnCallinTypeChanging(value);
					this.SendPropertyChanging();
					this._CallinType = value;
					this.SendPropertyChanged("CallinType");
					this.OnCallinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CILocationId", DbType="Int")]
		public System.Nullable<int> CILocationId
		{
			get
			{
				return this._CILocationId;
			}
			set
			{
				if ((this._CILocationId != value))
				{
					this.OnCILocationIdChanging(value);
					this.SendPropertyChanging();
					this._CILocationId = value;
					this.SendPropertyChanged("CILocationId");
					this.OnCILocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CILatitudeLongitude", DbType="VarChar(50)")]
		public string CILatitudeLongitude
		{
			get
			{
				return this._CILatitudeLongitude;
			}
			set
			{
				if ((this._CILatitudeLongitude != value))
				{
					this.OnCILatitudeLongitudeChanging(value);
					this.SendPropertyChanging();
					this._CILatitudeLongitude = value;
					this.SendPropertyChanged("CILatitudeLongitude");
					this.OnCILatitudeLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalloutType", DbType="Bit")]
		public System.Nullable<bool> CalloutType
		{
			get
			{
				return this._CalloutType;
			}
			set
			{
				if ((this._CalloutType != value))
				{
					this.OnCalloutTypeChanging(value);
					this.SendPropertyChanging();
					this._CalloutType = value;
					this.SendPropertyChanged("CalloutType");
					this.OnCalloutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLocationId", DbType="Int")]
		public System.Nullable<int> COLocationId
		{
			get
			{
				return this._COLocationId;
			}
			set
			{
				if ((this._COLocationId != value))
				{
					this.OnCOLocationIdChanging(value);
					this.SendPropertyChanging();
					this._COLocationId = value;
					this.SendPropertyChanged("COLocationId");
					this.OnCOLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLatitudeLongitude", DbType="VarChar(50)")]
		public string COLatitudeLongitude
		{
			get
			{
				return this._COLatitudeLongitude;
			}
			set
			{
				if ((this._COLatitudeLongitude != value))
				{
					this.OnCOLatitudeLongitudeChanging(value);
					this.SendPropertyChanging();
					this._COLatitudeLongitude = value;
					this.SendPropertyChanged("COLatitudeLongitude");
					this.OnCOLatitudeLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemCallout", DbType="Bit NOT NULL")]
		public bool SystemCallout
		{
			get
			{
				return this._SystemCallout;
			}
			set
			{
				if ((this._SystemCallout != value))
				{
					this.OnSystemCalloutChanging(value);
					this.SendPropertyChanging();
					this._SystemCallout = value;
					this.SendPropertyChanged("SystemCallout");
					this.OnSystemCalloutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallTime", DbType="NVarChar(20)")]
		public string CallTime
		{
			get
			{
				return this._CallTime;
			}
			set
			{
				if ((this._CallTime != value))
				{
					this.OnCallTimeChanging(value);
					this.SendPropertyChanging();
					this._CallTime = value;
					this.SendPropertyChanged("CallTime");
					this.OnCallTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallinDeviceId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CallinDeviceId
		{
			get
			{
				return this._CallinDeviceId;
			}
			set
			{
				if ((this._CallinDeviceId != value))
				{
					this.OnCallinDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._CallinDeviceId = value;
					this.SendPropertyChanged("CallinDeviceId");
					this.OnCallinDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalloutDeviceId", DbType="VarChar(50)")]
		public string CalloutDeviceId
		{
			get
			{
				return this._CalloutDeviceId;
			}
			set
			{
				if ((this._CalloutDeviceId != value))
				{
					this.OnCalloutDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._CalloutDeviceId = value;
					this.SendPropertyChanged("CalloutDeviceId");
					this.OnCalloutDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallConclusion", DbType="VarChar(MAX)")]
		public string CallConclusion
		{
			get
			{
				return this._CallConclusion;
			}
			set
			{
				if ((this._CallConclusion != value))
				{
					this.OnCallConclusionChanging(value);
					this.SendPropertyChanging();
					this._CallConclusion = value;
					this.SendPropertyChanged("CallConclusion");
					this.OnCallConclusionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyId;
		
		private string _CompanyName;
		
		private bool _IsActive;
		
		private System.DateTime _DefaultTimeFrom;
		
		private System.DateTime _DefaultTimeTo;
		
		private int _BreakCategoryId;
		
		private System.DateTime _LunchTimeFrom;
		
		private System.DateTime _LunchTimeTo;
		
		private System.DateTime _TeaTimeFrom;
		
		private System.DateTime _TeaTimeTo;
		
		private int _TotalBreakCount;
		
		private int _UserLimit;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnDefaultTimeFromChanging(System.DateTime value);
    partial void OnDefaultTimeFromChanged();
    partial void OnDefaultTimeToChanging(System.DateTime value);
    partial void OnDefaultTimeToChanged();
    partial void OnBreakCategoryIdChanging(int value);
    partial void OnBreakCategoryIdChanged();
    partial void OnLunchTimeFromChanging(System.DateTime value);
    partial void OnLunchTimeFromChanged();
    partial void OnLunchTimeToChanging(System.DateTime value);
    partial void OnLunchTimeToChanged();
    partial void OnTeaTimeFromChanging(System.DateTime value);
    partial void OnTeaTimeFromChanged();
    partial void OnTeaTimeToChanging(System.DateTime value);
    partial void OnTeaTimeToChanged();
    partial void OnTotalBreakCountChanging(int value);
    partial void OnTotalBreakCountChanged();
    partial void OnUserLimitChanging(int value);
    partial void OnUserLimitChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTimeFrom", DbType="DateTime NOT NULL")]
		public System.DateTime DefaultTimeFrom
		{
			get
			{
				return this._DefaultTimeFrom;
			}
			set
			{
				if ((this._DefaultTimeFrom != value))
				{
					this.OnDefaultTimeFromChanging(value);
					this.SendPropertyChanging();
					this._DefaultTimeFrom = value;
					this.SendPropertyChanged("DefaultTimeFrom");
					this.OnDefaultTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultTimeTo", DbType="DateTime NOT NULL")]
		public System.DateTime DefaultTimeTo
		{
			get
			{
				return this._DefaultTimeTo;
			}
			set
			{
				if ((this._DefaultTimeTo != value))
				{
					this.OnDefaultTimeToChanging(value);
					this.SendPropertyChanging();
					this._DefaultTimeTo = value;
					this.SendPropertyChanged("DefaultTimeTo");
					this.OnDefaultTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakCategoryId", DbType="Int NOT NULL")]
		public int BreakCategoryId
		{
			get
			{
				return this._BreakCategoryId;
			}
			set
			{
				if ((this._BreakCategoryId != value))
				{
					this.OnBreakCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._BreakCategoryId = value;
					this.SendPropertyChanged("BreakCategoryId");
					this.OnBreakCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LunchTimeFrom", DbType="DateTime NOT NULL")]
		public System.DateTime LunchTimeFrom
		{
			get
			{
				return this._LunchTimeFrom;
			}
			set
			{
				if ((this._LunchTimeFrom != value))
				{
					this.OnLunchTimeFromChanging(value);
					this.SendPropertyChanging();
					this._LunchTimeFrom = value;
					this.SendPropertyChanged("LunchTimeFrom");
					this.OnLunchTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LunchTimeTo", DbType="DateTime NOT NULL")]
		public System.DateTime LunchTimeTo
		{
			get
			{
				return this._LunchTimeTo;
			}
			set
			{
				if ((this._LunchTimeTo != value))
				{
					this.OnLunchTimeToChanging(value);
					this.SendPropertyChanging();
					this._LunchTimeTo = value;
					this.SendPropertyChanged("LunchTimeTo");
					this.OnLunchTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeaTimeFrom", DbType="DateTime NOT NULL")]
		public System.DateTime TeaTimeFrom
		{
			get
			{
				return this._TeaTimeFrom;
			}
			set
			{
				if ((this._TeaTimeFrom != value))
				{
					this.OnTeaTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TeaTimeFrom = value;
					this.SendPropertyChanged("TeaTimeFrom");
					this.OnTeaTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeaTimeTo", DbType="DateTime NOT NULL")]
		public System.DateTime TeaTimeTo
		{
			get
			{
				return this._TeaTimeTo;
			}
			set
			{
				if ((this._TeaTimeTo != value))
				{
					this.OnTeaTimeToChanging(value);
					this.SendPropertyChanging();
					this._TeaTimeTo = value;
					this.SendPropertyChanged("TeaTimeTo");
					this.OnTeaTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBreakCount", DbType="Int NOT NULL")]
		public int TotalBreakCount
		{
			get
			{
				return this._TotalBreakCount;
			}
			set
			{
				if ((this._TotalBreakCount != value))
				{
					this.OnTotalBreakCountChanging(value);
					this.SendPropertyChanging();
					this._TotalBreakCount = value;
					this.SendPropertyChanged("TotalBreakCount");
					this.OnTotalBreakCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLimit", DbType="Int NOT NULL")]
		public int UserLimit
		{
			get
			{
				return this._UserLimit;
			}
			set
			{
				if ((this._UserLimit != value))
				{
					this.OnUserLimitChanging(value);
					this.SendPropertyChanging();
					this._UserLimit = value;
					this.SendPropertyChanged("UserLimit");
					this.OnUserLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyBranch")]
	public partial class CompanyBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CompanyID;
		
		private string _BranchName;
		
		private string _BranchAddress;
		
		private System.Nullable<bool> _Status;
		
		private string _BranchCode;
		
		private System.Nullable<byte> _BranchTypeId;
		
		private System.Nullable<int> _ParentBranchId;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _Pincode;
		
		private string _Location;
		
		private System.Nullable<int> _CretedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<bool> _Edit;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnBranchAddressChanging(string value);
    partial void OnBranchAddressChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchTypeIdChanging(System.Nullable<byte> value);
    partial void OnBranchTypeIdChanged();
    partial void OnParentBranchIdChanging(System.Nullable<int> value);
    partial void OnParentBranchIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnCretedByChanging(System.Nullable<int> value);
    partial void OnCretedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public CompanyBranch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchAddress", DbType="NVarChar(255)")]
		public string BranchAddress
		{
			get
			{
				return this._BranchAddress;
			}
			set
			{
				if ((this._BranchAddress != value))
				{
					this.OnBranchAddressChanging(value);
					this.SendPropertyChanging();
					this._BranchAddress = value;
					this.SendPropertyChanged("BranchAddress");
					this.OnBranchAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(50)")]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchTypeId", DbType="TinyInt")]
		public System.Nullable<byte> BranchTypeId
		{
			get
			{
				return this._BranchTypeId;
			}
			set
			{
				if ((this._BranchTypeId != value))
				{
					this.OnBranchTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BranchTypeId = value;
					this.SendPropertyChanged("BranchTypeId");
					this.OnBranchTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentBranchId", DbType="Int")]
		public System.Nullable<int> ParentBranchId
		{
			get
			{
				return this._ParentBranchId;
			}
			set
			{
				if ((this._ParentBranchId != value))
				{
					this.OnParentBranchIdChanging(value);
					this.SendPropertyChanging();
					this._ParentBranchId = value;
					this.SendPropertyChanged("ParentBranchId");
					this.OnParentBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="NVarChar(20)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CretedBy", DbType="Int")]
		public System.Nullable<int> CretedBy
		{
			get
			{
				return this._CretedBy;
			}
			set
			{
				if ((this._CretedBy != value))
				{
					this.OnCretedByChanging(value);
					this.SendPropertyChanging();
					this._CretedBy = value;
					this.SendPropertyChanged("CretedBy");
					this.OnCretedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyLeaveTypeCount")]
	public partial class CompanyLeaveTypeCount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveCountId;
		
		private int _CompanyId;
		
		private int _LeaveTypeId;
		
		private int _LeaveCountByType;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveCountIdChanging(int value);
    partial void OnLeaveCountIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveCountByTypeChanging(int value);
    partial void OnLeaveCountByTypeChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public CompanyLeaveTypeCount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveCountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveCountId
		{
			get
			{
				return this._LeaveCountId;
			}
			set
			{
				if ((this._LeaveCountId != value))
				{
					this.OnLeaveCountIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveCountId = value;
					this.SendPropertyChanged("LeaveCountId");
					this.OnLeaveCountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL")]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveCountByType", DbType="Int NOT NULL")]
		public int LeaveCountByType
		{
			get
			{
				return this._LeaveCountByType;
			}
			set
			{
				if ((this._LeaveCountByType != value))
				{
					this.OnLeaveCountByTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveCountByType = value;
					this.SendPropertyChanged("LeaveCountByType");
					this.OnLeaveCountByTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyMaster")]
	public partial class CompanyMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CompanyName;
		
		private string _CompanyCode;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public CompanyMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(50)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(20)")]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyWeekOffDay")]
	public partial class CompanyWeekOffDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WeekOffId;
		
		private int _CompanyId;
		
		private string _WeekOffDay;
		
		private bool _IsAlternative;
		
		private string _AlternativeDay;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeekOffIdChanging(int value);
    partial void OnWeekOffIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnWeekOffDayChanging(string value);
    partial void OnWeekOffDayChanged();
    partial void OnIsAlternativeChanging(bool value);
    partial void OnIsAlternativeChanged();
    partial void OnAlternativeDayChanging(string value);
    partial void OnAlternativeDayChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public CompanyWeekOffDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WeekOffId
		{
			get
			{
				return this._WeekOffId;
			}
			set
			{
				if ((this._WeekOffId != value))
				{
					this.OnWeekOffIdChanging(value);
					this.SendPropertyChanging();
					this._WeekOffId = value;
					this.SendPropertyChanged("WeekOffId");
					this.OnWeekOffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOffDay", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WeekOffDay
		{
			get
			{
				return this._WeekOffDay;
			}
			set
			{
				if ((this._WeekOffDay != value))
				{
					this.OnWeekOffDayChanging(value);
					this.SendPropertyChanging();
					this._WeekOffDay = value;
					this.SendPropertyChanged("WeekOffDay");
					this.OnWeekOffDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlternative", DbType="Bit NOT NULL")]
		public bool IsAlternative
		{
			get
			{
				return this._IsAlternative;
			}
			set
			{
				if ((this._IsAlternative != value))
				{
					this.OnIsAlternativeChanging(value);
					this.SendPropertyChanging();
					this._IsAlternative = value;
					this.SendPropertyChanged("IsAlternative");
					this.OnIsAlternativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeDay", DbType="VarChar(50)")]
		public string AlternativeDay
		{
			get
			{
				return this._AlternativeDay;
			}
			set
			{
				if ((this._AlternativeDay != value))
				{
					this.OnAlternativeDayChanging(value);
					this.SendPropertyChanging();
					this._AlternativeDay = value;
					this.SendPropertyChanged("AlternativeDay");
					this.OnAlternativeDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Components")]
	public partial class Component : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComponentId;
		
		private string _ComponentName;
		
		private int _PageId;
		
		private System.Nullable<bool> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComponentIdChanging(int value);
    partial void OnComponentIdChanged();
    partial void OnComponentNameChanging(string value);
    partial void OnComponentNameChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public Component()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComponentId
		{
			get
			{
				return this._ComponentId;
			}
			set
			{
				if ((this._ComponentId != value))
				{
					this.OnComponentIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentId = value;
					this.SendPropertyChanged("ComponentId");
					this.OnComponentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ComponentName
		{
			get
			{
				return this._ComponentName;
			}
			set
			{
				if ((this._ComponentName != value))
				{
					this.OnComponentNameChanging(value);
					this.SendPropertyChanging();
					this._ComponentName = value;
					this.SendPropertyChanged("ComponentName");
					this.OnComponentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAddress")]
	public partial class EmployeeAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private long _UserID;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Pincode;
		
		private string _CurrAddress;
		
		private string _CurrCity;
		
		private string _CurrState;
		
		private string _CurrPincode;
		
		private string _Country;
		
		private string _ImergencyCntNo;
		
		private string _ImergencyName;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<int> _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnCurrAddressChanging(string value);
    partial void OnCurrAddressChanged();
    partial void OnCurrCityChanging(string value);
    partial void OnCurrCityChanged();
    partial void OnCurrStateChanging(string value);
    partial void OnCurrStateChanged();
    partial void OnCurrPincodeChanging(string value);
    partial void OnCurrPincodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnImergencyCntNoChanging(string value);
    partial void OnImergencyCntNoChanged();
    partial void OnImergencyNameChanging(string value);
    partial void OnImergencyNameChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public EmployeeAddress()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="NVarChar(10)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrAddress", DbType="NVarChar(300)")]
		public string CurrAddress
		{
			get
			{
				return this._CurrAddress;
			}
			set
			{
				if ((this._CurrAddress != value))
				{
					this.OnCurrAddressChanging(value);
					this.SendPropertyChanging();
					this._CurrAddress = value;
					this.SendPropertyChanged("CurrAddress");
					this.OnCurrAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrCity", DbType="NVarChar(50)")]
		public string CurrCity
		{
			get
			{
				return this._CurrCity;
			}
			set
			{
				if ((this._CurrCity != value))
				{
					this.OnCurrCityChanging(value);
					this.SendPropertyChanging();
					this._CurrCity = value;
					this.SendPropertyChanged("CurrCity");
					this.OnCurrCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrState", DbType="NVarChar(50)")]
		public string CurrState
		{
			get
			{
				return this._CurrState;
			}
			set
			{
				if ((this._CurrState != value))
				{
					this.OnCurrStateChanging(value);
					this.SendPropertyChanging();
					this._CurrState = value;
					this.SendPropertyChanged("CurrState");
					this.OnCurrStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrPincode", DbType="NVarChar(10)")]
		public string CurrPincode
		{
			get
			{
				return this._CurrPincode;
			}
			set
			{
				if ((this._CurrPincode != value))
				{
					this.OnCurrPincodeChanging(value);
					this.SendPropertyChanging();
					this._CurrPincode = value;
					this.SendPropertyChanged("CurrPincode");
					this.OnCurrPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImergencyCntNo", DbType="NVarChar(50)")]
		public string ImergencyCntNo
		{
			get
			{
				return this._ImergencyCntNo;
			}
			set
			{
				if ((this._ImergencyCntNo != value))
				{
					this.OnImergencyCntNoChanging(value);
					this.SendPropertyChanging();
					this._ImergencyCntNo = value;
					this.SendPropertyChanged("ImergencyCntNo");
					this.OnImergencyCntNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImergencyName", DbType="NVarChar(50)")]
		public string ImergencyName
		{
			get
			{
				return this._ImergencyName;
			}
			set
			{
				if ((this._ImergencyName != value))
				{
					this.OnImergencyNameChanging(value);
					this.SendPropertyChanging();
					this._ImergencyName = value;
					this.SendPropertyChanged("ImergencyName");
					this.OnImergencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeBankDetails")]
	public partial class EmployeeBankDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountId;
		
		private System.Nullable<long> _UserID;
		
		private string _BankAccountNo;
		
		private string _BankName;
		
		private string _BranchCode;
		
		private string _IFSCode;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnBankAccountNoChanging(string value);
    partial void OnBankAccountNoChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnIFSCodeChanging(string value);
    partial void OnIFSCodeChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public EmployeeBankDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountNo", DbType="NVarChar(50)")]
		public string BankAccountNo
		{
			get
			{
				return this._BankAccountNo;
			}
			set
			{
				if ((this._BankAccountNo != value))
				{
					this.OnBankAccountNoChanging(value);
					this.SendPropertyChanging();
					this._BankAccountNo = value;
					this.SendPropertyChanged("BankAccountNo");
					this.OnBankAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(200)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(50)")]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFSCode", DbType="NVarChar(50)")]
		public string IFSCode
		{
			get
			{
				return this._IFSCode;
			}
			set
			{
				if ((this._IFSCode != value))
				{
					this.OnIFSCodeChanging(value);
					this.SendPropertyChanging();
					this._IFSCode = value;
					this.SendPropertyChanged("IFSCode");
					this.OnIFSCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeEducationDetails")]
	public partial class EmployeeEducationDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _EduId;
		
		private System.Nullable<long> _UserID;
		
		private string _Degree;
		
		private string _Institute;
		
		private string _University;
		
		private System.Nullable<int> _YearOfPassing;
		
		private System.Nullable<byte> _GradeType;
		
		private string _Grade;
		
		private System.Nullable<byte> _CourseType;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _IpAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEduIdChanging(long value);
    partial void OnEduIdChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    partial void OnInstituteChanging(string value);
    partial void OnInstituteChanged();
    partial void OnUniversityChanging(string value);
    partial void OnUniversityChanged();
    partial void OnYearOfPassingChanging(System.Nullable<int> value);
    partial void OnYearOfPassingChanged();
    partial void OnGradeTypeChanging(System.Nullable<byte> value);
    partial void OnGradeTypeChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnCourseTypeChanging(System.Nullable<byte> value);
    partial void OnCourseTypeChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    #endregion
		
		public EmployeeEducationDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long EduId
		{
			get
			{
				return this._EduId;
			}
			set
			{
				if ((this._EduId != value))
				{
					this.OnEduIdChanging(value);
					this.SendPropertyChanging();
					this._EduId = value;
					this.SendPropertyChanged("EduId");
					this.OnEduIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(50)")]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institute", DbType="NVarChar(100)")]
		public string Institute
		{
			get
			{
				return this._Institute;
			}
			set
			{
				if ((this._Institute != value))
				{
					this.OnInstituteChanging(value);
					this.SendPropertyChanging();
					this._Institute = value;
					this.SendPropertyChanged("Institute");
					this.OnInstituteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_University", DbType="NVarChar(100)")]
		public string University
		{
			get
			{
				return this._University;
			}
			set
			{
				if ((this._University != value))
				{
					this.OnUniversityChanging(value);
					this.SendPropertyChanging();
					this._University = value;
					this.SendPropertyChanged("University");
					this.OnUniversityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPassing", DbType="Int")]
		public System.Nullable<int> YearOfPassing
		{
			get
			{
				return this._YearOfPassing;
			}
			set
			{
				if ((this._YearOfPassing != value))
				{
					this.OnYearOfPassingChanging(value);
					this.SendPropertyChanging();
					this._YearOfPassing = value;
					this.SendPropertyChanged("YearOfPassing");
					this.OnYearOfPassingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeType", DbType="TinyInt")]
		public System.Nullable<byte> GradeType
		{
			get
			{
				return this._GradeType;
			}
			set
			{
				if ((this._GradeType != value))
				{
					this.OnGradeTypeChanging(value);
					this.SendPropertyChanging();
					this._GradeType = value;
					this.SendPropertyChanged("GradeType");
					this.OnGradeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(10)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseType", DbType="TinyInt")]
		public System.Nullable<byte> CourseType
		{
			get
			{
				return this._CourseType;
			}
			set
			{
				if ((this._CourseType != value))
				{
					this.OnCourseTypeChanging(value);
					this.SendPropertyChanging();
					this._CourseType = value;
					this.SendPropertyChanged("CourseType");
					this.OnCourseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(50)")]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeFamily")]
	public partial class EmployeeFamily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _UserID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _Relation;
		
		private System.Nullable<byte> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnRelationChanging(string value);
    partial void OnRelationChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public EmployeeFamily()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relation", DbType="NVarChar(50)")]
		public string Relation
		{
			get
			{
				return this._Relation;
			}
			set
			{
				if ((this._Relation != value))
				{
					this.OnRelationChanging(value);
					this.SendPropertyChanging();
					this._Relation = value;
					this.SendPropertyChanged("Relation");
					this.OnRelationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeMaster")]
	public partial class EmployeeMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EmployeeID;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Gender;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private System.Nullable<System.DateTime> _DOBFather;
		
		private System.Nullable<System.DateTime> _DOBMother;
		
		private System.Nullable<int> _MaritalStatus;
		
		private System.Nullable<System.DateTime> _AnniversaryDate;
		
		private string _SpouseName;
		
		private System.Nullable<System.DateTime> _DOBSpouse;
		
		private string _DegreeName;
		
		private string _Grade;
		
		private System.Nullable<int> _YearOfPassing;
		
		private string _DegreeDesc;
		
		private string _ProfileImg;
		
		private System.Nullable<int> _EmpType;
		
		private System.Nullable<int> _ReportingPerson;
		
		private string _CompanyEmail;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<System.DateTime> _CompanyJoinDate;
		
		private System.Nullable<System.DateTime> _CompanyLeaveDate;
		
		private string _SalaryACNumber;
		
		private string _SalaryBank;
		
		private string _SalaryBankBranch;
		
		private string _SalaryBankIFSC;
		
		private string _PANNo;
		
		private string _AdharNo;
		
		private string _DLNo;
		
		private string _PassportNo;
		
		private string _VoterID;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnDOBFatherChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBFatherChanged();
    partial void OnDOBMotherChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBMotherChanged();
    partial void OnMaritalStatusChanging(System.Nullable<int> value);
    partial void OnMaritalStatusChanged();
    partial void OnAnniversaryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAnniversaryDateChanged();
    partial void OnSpouseNameChanging(string value);
    partial void OnSpouseNameChanged();
    partial void OnDOBSpouseChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBSpouseChanged();
    partial void OnDegreeNameChanging(string value);
    partial void OnDegreeNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnYearOfPassingChanging(System.Nullable<int> value);
    partial void OnYearOfPassingChanged();
    partial void OnDegreeDescChanging(string value);
    partial void OnDegreeDescChanged();
    partial void OnProfileImgChanging(string value);
    partial void OnProfileImgChanged();
    partial void OnEmpTypeChanging(System.Nullable<int> value);
    partial void OnEmpTypeChanged();
    partial void OnReportingPersonChanging(System.Nullable<int> value);
    partial void OnReportingPersonChanged();
    partial void OnCompanyEmailChanging(string value);
    partial void OnCompanyEmailChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnCompanyJoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompanyJoinDateChanged();
    partial void OnCompanyLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompanyLeaveDateChanged();
    partial void OnSalaryACNumberChanging(string value);
    partial void OnSalaryACNumberChanged();
    partial void OnSalaryBankChanging(string value);
    partial void OnSalaryBankChanged();
    partial void OnSalaryBankBranchChanging(string value);
    partial void OnSalaryBankBranchChanged();
    partial void OnSalaryBankIFSCChanging(string value);
    partial void OnSalaryBankIFSCChanged();
    partial void OnPANNoChanging(string value);
    partial void OnPANNoChanged();
    partial void OnAdharNoChanging(string value);
    partial void OnAdharNoChanged();
    partial void OnDLNoChanging(string value);
    partial void OnDLNoChanged();
    partial void OnPassportNoChanging(string value);
    partial void OnPassportNoChanged();
    partial void OnVoterIDChanging(string value);
    partial void OnVoterIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public EmployeeMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(10)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NChar(3)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOBFather", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOBFather
		{
			get
			{
				return this._DOBFather;
			}
			set
			{
				if ((this._DOBFather != value))
				{
					this.OnDOBFatherChanging(value);
					this.SendPropertyChanging();
					this._DOBFather = value;
					this.SendPropertyChanged("DOBFather");
					this.OnDOBFatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOBMother", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOBMother
		{
			get
			{
				return this._DOBMother;
			}
			set
			{
				if ((this._DOBMother != value))
				{
					this.OnDOBMotherChanging(value);
					this.SendPropertyChanging();
					this._DOBMother = value;
					this.SendPropertyChanged("DOBMother");
					this.OnDOBMotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="Int")]
		public System.Nullable<int> MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnniversaryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AnniversaryDate
		{
			get
			{
				return this._AnniversaryDate;
			}
			set
			{
				if ((this._AnniversaryDate != value))
				{
					this.OnAnniversaryDateChanging(value);
					this.SendPropertyChanging();
					this._AnniversaryDate = value;
					this.SendPropertyChanged("AnniversaryDate");
					this.OnAnniversaryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseName", DbType="NVarChar(50)")]
		public string SpouseName
		{
			get
			{
				return this._SpouseName;
			}
			set
			{
				if ((this._SpouseName != value))
				{
					this.OnSpouseNameChanging(value);
					this.SendPropertyChanging();
					this._SpouseName = value;
					this.SendPropertyChanged("SpouseName");
					this.OnSpouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOBSpouse", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOBSpouse
		{
			get
			{
				return this._DOBSpouse;
			}
			set
			{
				if ((this._DOBSpouse != value))
				{
					this.OnDOBSpouseChanging(value);
					this.SendPropertyChanging();
					this._DOBSpouse = value;
					this.SendPropertyChanged("DOBSpouse");
					this.OnDOBSpouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeName", DbType="NVarChar(50)")]
		public string DegreeName
		{
			get
			{
				return this._DegreeName;
			}
			set
			{
				if ((this._DegreeName != value))
				{
					this.OnDegreeNameChanging(value);
					this.SendPropertyChanging();
					this._DegreeName = value;
					this.SendPropertyChanged("DegreeName");
					this.OnDegreeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(10)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfPassing", DbType="Int")]
		public System.Nullable<int> YearOfPassing
		{
			get
			{
				return this._YearOfPassing;
			}
			set
			{
				if ((this._YearOfPassing != value))
				{
					this.OnYearOfPassingChanging(value);
					this.SendPropertyChanging();
					this._YearOfPassing = value;
					this.SendPropertyChanged("YearOfPassing");
					this.OnYearOfPassingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeDesc", DbType="NVarChar(300)")]
		public string DegreeDesc
		{
			get
			{
				return this._DegreeDesc;
			}
			set
			{
				if ((this._DegreeDesc != value))
				{
					this.OnDegreeDescChanging(value);
					this.SendPropertyChanging();
					this._DegreeDesc = value;
					this.SendPropertyChanged("DegreeDesc");
					this.OnDegreeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImg", DbType="NVarChar(50)")]
		public string ProfileImg
		{
			get
			{
				return this._ProfileImg;
			}
			set
			{
				if ((this._ProfileImg != value))
				{
					this.OnProfileImgChanging(value);
					this.SendPropertyChanging();
					this._ProfileImg = value;
					this.SendPropertyChanged("ProfileImg");
					this.OnProfileImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpType", DbType="Int")]
		public System.Nullable<int> EmpType
		{
			get
			{
				return this._EmpType;
			}
			set
			{
				if ((this._EmpType != value))
				{
					this.OnEmpTypeChanging(value);
					this.SendPropertyChanging();
					this._EmpType = value;
					this.SendPropertyChanged("EmpType");
					this.OnEmpTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportingPerson", DbType="Int")]
		public System.Nullable<int> ReportingPerson
		{
			get
			{
				return this._ReportingPerson;
			}
			set
			{
				if ((this._ReportingPerson != value))
				{
					this.OnReportingPersonChanging(value);
					this.SendPropertyChanging();
					this._ReportingPerson = value;
					this.SendPropertyChanged("ReportingPerson");
					this.OnReportingPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEmail", DbType="NVarChar(50)")]
		public string CompanyEmail
		{
			get
			{
				return this._CompanyEmail;
			}
			set
			{
				if ((this._CompanyEmail != value))
				{
					this.OnCompanyEmailChanging(value);
					this.SendPropertyChanging();
					this._CompanyEmail = value;
					this.SendPropertyChanged("CompanyEmail");
					this.OnCompanyEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyJoinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompanyJoinDate
		{
			get
			{
				return this._CompanyJoinDate;
			}
			set
			{
				if ((this._CompanyJoinDate != value))
				{
					this.OnCompanyJoinDateChanging(value);
					this.SendPropertyChanging();
					this._CompanyJoinDate = value;
					this.SendPropertyChanged("CompanyJoinDate");
					this.OnCompanyJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLeaveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompanyLeaveDate
		{
			get
			{
				return this._CompanyLeaveDate;
			}
			set
			{
				if ((this._CompanyLeaveDate != value))
				{
					this.OnCompanyLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._CompanyLeaveDate = value;
					this.SendPropertyChanged("CompanyLeaveDate");
					this.OnCompanyLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryACNumber", DbType="NVarChar(30)")]
		public string SalaryACNumber
		{
			get
			{
				return this._SalaryACNumber;
			}
			set
			{
				if ((this._SalaryACNumber != value))
				{
					this.OnSalaryACNumberChanging(value);
					this.SendPropertyChanging();
					this._SalaryACNumber = value;
					this.SendPropertyChanged("SalaryACNumber");
					this.OnSalaryACNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBank", DbType="NVarChar(30)")]
		public string SalaryBank
		{
			get
			{
				return this._SalaryBank;
			}
			set
			{
				if ((this._SalaryBank != value))
				{
					this.OnSalaryBankChanging(value);
					this.SendPropertyChanging();
					this._SalaryBank = value;
					this.SendPropertyChanged("SalaryBank");
					this.OnSalaryBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBankBranch", DbType="NVarChar(30)")]
		public string SalaryBankBranch
		{
			get
			{
				return this._SalaryBankBranch;
			}
			set
			{
				if ((this._SalaryBankBranch != value))
				{
					this.OnSalaryBankBranchChanging(value);
					this.SendPropertyChanging();
					this._SalaryBankBranch = value;
					this.SendPropertyChanged("SalaryBankBranch");
					this.OnSalaryBankBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryBankIFSC", DbType="NVarChar(16)")]
		public string SalaryBankIFSC
		{
			get
			{
				return this._SalaryBankIFSC;
			}
			set
			{
				if ((this._SalaryBankIFSC != value))
				{
					this.OnSalaryBankIFSCChanging(value);
					this.SendPropertyChanging();
					this._SalaryBankIFSC = value;
					this.SendPropertyChanged("SalaryBankIFSC");
					this.OnSalaryBankIFSCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PANNo", DbType="NVarChar(11)")]
		public string PANNo
		{
			get
			{
				return this._PANNo;
			}
			set
			{
				if ((this._PANNo != value))
				{
					this.OnPANNoChanging(value);
					this.SendPropertyChanging();
					this._PANNo = value;
					this.SendPropertyChanged("PANNo");
					this.OnPANNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdharNo", DbType="NVarChar(15)")]
		public string AdharNo
		{
			get
			{
				return this._AdharNo;
			}
			set
			{
				if ((this._AdharNo != value))
				{
					this.OnAdharNoChanging(value);
					this.SendPropertyChanging();
					this._AdharNo = value;
					this.SendPropertyChanged("AdharNo");
					this.OnAdharNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLNo", DbType="NVarChar(20)")]
		public string DLNo
		{
			get
			{
				return this._DLNo;
			}
			set
			{
				if ((this._DLNo != value))
				{
					this.OnDLNoChanging(value);
					this.SendPropertyChanging();
					this._DLNo = value;
					this.SendPropertyChanged("DLNo");
					this.OnDLNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNo", DbType="NVarChar(10)")]
		public string PassportNo
		{
			get
			{
				return this._PassportNo;
			}
			set
			{
				if ((this._PassportNo != value))
				{
					this.OnPassportNoChanging(value);
					this.SendPropertyChanging();
					this._PassportNo = value;
					this.SendPropertyChanged("PassportNo");
					this.OnPassportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoterID", DbType="NVarChar(25)")]
		public string VoterID
		{
			get
			{
				return this._VoterID;
			}
			set
			{
				if ((this._VoterID != value))
				{
					this.OnVoterIDChanging(value);
					this.SendPropertyChanging();
					this._VoterID = value;
					this.SendPropertyChanged("VoterID");
					this.OnVoterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeePersonalIDs")]
	public partial class EmployeePersonalID
	{
		
		private System.Nullable<long> _ID;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<int> _IDType;
		
		private string _IDNumber;
		
		private string _imageUrl;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<int> _UpdatedBy;
		
		private string _IPAddress;
		
		public EmployeePersonalID()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt")]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDType", DbType="Int")]
		public System.Nullable<int> IDType
		{
			get
			{
				return this._IDType;
			}
			set
			{
				if ((this._IDType != value))
				{
					this._IDType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(100)")]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this._IDNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="NVarChar(100)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this._imageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this._Edit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this._CreatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(20)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this._IPAddress = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupAccess")]
	public partial class GroupAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _GroupID;
		
		private System.Nullable<long> _GroupAccessID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(System.Nullable<long> value);
    partial void OnGroupIDChanged();
    partial void OnGroupAccessIDChanging(System.Nullable<long> value);
    partial void OnGroupAccessIDChanged();
    #endregion
		
		public GroupAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt")]
		public System.Nullable<long> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupAccessID", DbType="BigInt")]
		public System.Nullable<long> GroupAccessID
		{
			get
			{
				return this._GroupAccessID;
			}
			set
			{
				if ((this._GroupAccessID != value))
				{
					this.OnGroupAccessIDChanging(value);
					this.SendPropertyChanging();
					this._GroupAccessID = value;
					this.SendPropertyChanged("GroupAccessID");
					this.OnGroupAccessIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupMaster")]
	public partial class GroupMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GroupName;
		
		private string _GroupCode;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<bool> _Status;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnGroupCodeChanging(string value);
    partial void OnGroupCodeChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public GroupMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupCode", DbType="NVarChar(10)")]
		public string GroupCode
		{
			get
			{
				return this._GroupCode;
			}
			set
			{
				if ((this._GroupCode != value))
				{
					this.OnGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._GroupCode = value;
					this.SendPropertyChanged("GroupCode");
					this.OnGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HalfDay")]
	public partial class HalfDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _LeaveID;
		
		private System.DateTime _HalfDayDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLeaveIDChanging(int value);
    partial void OnLeaveIDChanged();
    partial void OnHalfDayDateChanging(System.DateTime value);
    partial void OnHalfDayDateChanged();
    #endregion
		
		public HalfDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveID", DbType="Int NOT NULL")]
		public int LeaveID
		{
			get
			{
				return this._LeaveID;
			}
			set
			{
				if ((this._LeaveID != value))
				{
					this.OnLeaveIDChanging(value);
					this.SendPropertyChanging();
					this._LeaveID = value;
					this.SendPropertyChanged("LeaveID");
					this.OnLeaveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfDayDate", DbType="DateTime NOT NULL")]
		public System.DateTime HalfDayDate
		{
			get
			{
				return this._HalfDayDate;
			}
			set
			{
				if ((this._HalfDayDate != value))
				{
					this.OnHalfDayDateChanging(value);
					this.SendPropertyChanging();
					this._HalfDayDate = value;
					this.SendPropertyChanged("HalfDayDate");
					this.OnHalfDayDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holiday")]
	public partial class Holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _HolidayDate;
		
		private string _Description;
		
		private int _CompanyId;
		
		private System.Nullable<int> _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnHolidayDateChanging(System.DateTime value);
    partial void OnHolidayDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCreatedByChanging(System.Nullable<int> value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Holiday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="Date NOT NULL")]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int")]
		public System.Nullable<int> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leave")]
	public partial class Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveId;
		
		private int _UserId;
		
		private int _LeaveTypeId;
		
		private System.DateTime _LeaveFromDate;
		
		private System.DateTime _LeaveToDate;
		
		private int _LeaveDays;
		
		private int _WeekoffBetweenLeave;
		
		private string _WeekoffId;
		
		private int _HolidayBetweenLeave;
		
		private string _HolidayId;
		
		private string _Description;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveIdChanging(int value);
    partial void OnLeaveIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveFromDateChanging(System.DateTime value);
    partial void OnLeaveFromDateChanged();
    partial void OnLeaveToDateChanging(System.DateTime value);
    partial void OnLeaveToDateChanged();
    partial void OnLeaveDaysChanging(int value);
    partial void OnLeaveDaysChanged();
    partial void OnWeekoffBetweenLeaveChanging(int value);
    partial void OnWeekoffBetweenLeaveChanged();
    partial void OnWeekoffIdChanging(string value);
    partial void OnWeekoffIdChanged();
    partial void OnHolidayBetweenLeaveChanging(int value);
    partial void OnHolidayBetweenLeaveChanged();
    partial void OnHolidayIdChanging(string value);
    partial void OnHolidayIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Leave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveId
		{
			get
			{
				return this._LeaveId;
			}
			set
			{
				if ((this._LeaveId != value))
				{
					this.OnLeaveIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveId = value;
					this.SendPropertyChanged("LeaveId");
					this.OnLeaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL")]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveFromDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveFromDate
		{
			get
			{
				return this._LeaveFromDate;
			}
			set
			{
				if ((this._LeaveFromDate != value))
				{
					this.OnLeaveFromDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveFromDate = value;
					this.SendPropertyChanged("LeaveFromDate");
					this.OnLeaveFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveToDate", DbType="DateTime NOT NULL")]
		public System.DateTime LeaveToDate
		{
			get
			{
				return this._LeaveToDate;
			}
			set
			{
				if ((this._LeaveToDate != value))
				{
					this.OnLeaveToDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveToDate = value;
					this.SendPropertyChanged("LeaveToDate");
					this.OnLeaveToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDays", DbType="Int NOT NULL")]
		public int LeaveDays
		{
			get
			{
				return this._LeaveDays;
			}
			set
			{
				if ((this._LeaveDays != value))
				{
					this.OnLeaveDaysChanging(value);
					this.SendPropertyChanging();
					this._LeaveDays = value;
					this.SendPropertyChanged("LeaveDays");
					this.OnLeaveDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekoffBetweenLeave", DbType="Int NOT NULL")]
		public int WeekoffBetweenLeave
		{
			get
			{
				return this._WeekoffBetweenLeave;
			}
			set
			{
				if ((this._WeekoffBetweenLeave != value))
				{
					this.OnWeekoffBetweenLeaveChanging(value);
					this.SendPropertyChanging();
					this._WeekoffBetweenLeave = value;
					this.SendPropertyChanged("WeekoffBetweenLeave");
					this.OnWeekoffBetweenLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekoffId", DbType="NVarChar(50)")]
		public string WeekoffId
		{
			get
			{
				return this._WeekoffId;
			}
			set
			{
				if ((this._WeekoffId != value))
				{
					this.OnWeekoffIdChanging(value);
					this.SendPropertyChanging();
					this._WeekoffId = value;
					this.SendPropertyChanged("WeekoffId");
					this.OnWeekoffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayBetweenLeave", DbType="Int NOT NULL")]
		public int HolidayBetweenLeave
		{
			get
			{
				return this._HolidayBetweenLeave;
			}
			set
			{
				if ((this._HolidayBetweenLeave != value))
				{
					this.OnHolidayBetweenLeaveChanging(value);
					this.SendPropertyChanging();
					this._HolidayBetweenLeave = value;
					this.SendPropertyChanged("HolidayBetweenLeave");
					this.OnHolidayBetweenLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayId", DbType="NVarChar(50)")]
		public string HolidayId
		{
			get
			{
				return this._HolidayId;
			}
			set
			{
				if ((this._HolidayId != value))
				{
					this.OnHolidayIdChanging(value);
					this.SendPropertyChanging();
					this._HolidayId = value;
					this.SendPropertyChanged("HolidayId");
					this.OnHolidayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveApprovalType")]
	public partial class LeaveApprovalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveApprovalTypeId;
		
		private string _LeaveApprovalTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveApprovalTypeIdChanging(int value);
    partial void OnLeaveApprovalTypeIdChanged();
    partial void OnLeaveApprovalTypeNameChanging(string value);
    partial void OnLeaveApprovalTypeNameChanged();
    #endregion
		
		public LeaveApprovalType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApprovalTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveApprovalTypeId
		{
			get
			{
				return this._LeaveApprovalTypeId;
			}
			set
			{
				if ((this._LeaveApprovalTypeId != value))
				{
					this.OnLeaveApprovalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveApprovalTypeId = value;
					this.SendPropertyChanged("LeaveApprovalTypeId");
					this.OnLeaveApprovalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApprovalTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeaveApprovalTypeName
		{
			get
			{
				return this._LeaveApprovalTypeName;
			}
			set
			{
				if ((this._LeaveApprovalTypeName != value))
				{
					this.OnLeaveApprovalTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LeaveApprovalTypeName = value;
					this.SendPropertyChanged("LeaveApprovalTypeName");
					this.OnLeaveApprovalTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveType")]
	public partial class LeaveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveTypeId;
		
		private string _LeaveTypeName;
		
		private string _ShortForm;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private string _IpAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveTypeNameChanging(string value);
    partial void OnLeaveTypeNameChanged();
    partial void OnShortFormChanging(string value);
    partial void OnShortFormChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    #endregion
		
		public LeaveType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LeaveTypeName
		{
			get
			{
				return this._LeaveTypeName;
			}
			set
			{
				if ((this._LeaveTypeName != value))
				{
					this.OnLeaveTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeName = value;
					this.SendPropertyChanged("LeaveTypeName");
					this.OnLeaveTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortForm", DbType="NVarChar(50)")]
		public string ShortForm
		{
			get
			{
				return this._ShortForm;
			}
			set
			{
				if ((this._ShortForm != value))
				{
					this.OnShortFormChanging(value);
					this.SendPropertyChanging();
					this._ShortForm = value;
					this.SendPropertyChanged("ShortForm");
					this.OnShortFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(50)")]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationPin")]
	public partial class LocationPin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _LocationID;
		
		private string _Lat;
		
		private string _PinAddress;
		
		private string _Long;
		
		private System.Nullable<bool> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLatChanging(string value);
    partial void OnLatChanged();
    partial void OnPinAddressChanging(string value);
    partial void OnPinAddressChanged();
    partial void OnLongChanging(string value);
    partial void OnLongChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public LocationPin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Lat
		{
			get
			{
				return this._Lat;
			}
			set
			{
				if ((this._Lat != value))
				{
					this.OnLatChanging(value);
					this.SendPropertyChanging();
					this._Lat = value;
					this.SendPropertyChanged("Lat");
					this.OnLatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PinAddress", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PinAddress
		{
			get
			{
				return this._PinAddress;
			}
			set
			{
				if ((this._PinAddress != value))
				{
					this.OnPinAddressChanging(value);
					this.SendPropertyChanging();
					this._PinAddress = value;
					this.SendPropertyChanged("PinAddress");
					this.OnPinAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Long", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Long
		{
			get
			{
				return this._Long;
			}
			set
			{
				if ((this._Long != value))
				{
					this.OnLongChanging(value);
					this.SendPropertyChanging();
					this._Long = value;
					this.SendPropertyChanged("Long");
					this.OnLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationId;
		
		private int _CompanyId;
		
		private double _Longitude;
		
		private double _Latitude;
		
		private string _LocationName;
		
		private string _PlaceName;
		
		private string _LocationImage;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _BreakCategoryId;
		
		private int _TotalBreakCount;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnPlaceNameChanging(string value);
    partial void OnPlaceNameChanged();
    partial void OnLocationImageChanging(string value);
    partial void OnLocationImageChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnBreakCategoryIdChanging(System.Nullable<int> value);
    partial void OnBreakCategoryIdChanged();
    partial void OnTotalBreakCountChanging(int value);
    partial void OnTotalBreakCountChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public Location()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="VarChar(MAX)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceName", DbType="VarChar(MAX)")]
		public string PlaceName
		{
			get
			{
				return this._PlaceName;
			}
			set
			{
				if ((this._PlaceName != value))
				{
					this.OnPlaceNameChanging(value);
					this.SendPropertyChanging();
					this._PlaceName = value;
					this.SendPropertyChanged("PlaceName");
					this.OnPlaceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationImage", DbType="NVarChar(200)")]
		public string LocationImage
		{
			get
			{
				return this._LocationImage;
			}
			set
			{
				if ((this._LocationImage != value))
				{
					this.OnLocationImageChanging(value);
					this.SendPropertyChanging();
					this._LocationImage = value;
					this.SendPropertyChanged("LocationImage");
					this.OnLocationImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BreakCategoryId", DbType="Int")]
		public System.Nullable<int> BreakCategoryId
		{
			get
			{
				return this._BreakCategoryId;
			}
			set
			{
				if ((this._BreakCategoryId != value))
				{
					this.OnBreakCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._BreakCategoryId = value;
					this.SendPropertyChanged("BreakCategoryId");
					this.OnBreakCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBreakCount", DbType="Int NOT NULL")]
		public int TotalBreakCount
		{
			get
			{
				return this._TotalBreakCount;
			}
			set
			{
				if ((this._TotalBreakCount != value))
				{
					this.OnTotalBreakCountChanging(value);
					this.SendPropertyChanging();
					this._TotalBreakCount = value;
					this.SendPropertyChanged("TotalBreakCount");
					this.OnTotalBreakCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MId;
		
		private string _MenuName;
		
		private string _FormName;
		
		private string _IconName;
		
		private System.Nullable<int> _SortNumber;
		
		private int _PMId;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMIdChanging(int value);
    partial void OnMIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnIconNameChanging(string value);
    partial void OnIconNameChanged();
    partial void OnSortNumberChanging(System.Nullable<int> value);
    partial void OnSortNumberChanged();
    partial void OnPMIdChanging(int value);
    partial void OnPMIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MId
		{
			get
			{
				return this._MId;
			}
			set
			{
				if ((this._MId != value))
				{
					this.OnMIdChanging(value);
					this.SendPropertyChanging();
					this._MId = value;
					this.SendPropertyChanged("MId");
					this.OnMIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="VarChar(50)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconName", DbType="NVarChar(50)")]
		public string IconName
		{
			get
			{
				return this._IconName;
			}
			set
			{
				if ((this._IconName != value))
				{
					this.OnIconNameChanging(value);
					this.SendPropertyChanging();
					this._IconName = value;
					this.SendPropertyChanged("IconName");
					this.OnIconNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNumber", DbType="Int")]
		public System.Nullable<int> SortNumber
		{
			get
			{
				return this._SortNumber;
			}
			set
			{
				if ((this._SortNumber != value))
				{
					this.OnSortNumberChanging(value);
					this.SendPropertyChanging();
					this._SortNumber = value;
					this.SendPropertyChanged("SortNumber");
					this.OnSortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMId", DbType="Int NOT NULL")]
		public int PMId
		{
			get
			{
				return this._PMId;
			}
			set
			{
				if ((this._PMId != value))
				{
					this.OnPMIdChanging(value);
					this.SendPropertyChanging();
					this._PMId = value;
					this.SendPropertyChanged("PMId");
					this.OnPMIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfficialLeaves")]
	public partial class OfficialLeave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<byte> _LeaveFor;
		
		private System.Nullable<long> _ObjectId;
		
		private System.Nullable<System.DateTime> _ApplicableFromDate;
		
		private System.Nullable<System.DateTime> _ApplicableToDate;
		
		private System.Nullable<byte> _LeaveTypeId;
		
		private System.Nullable<int> _LeaveTypeCount;
		
		private System.Nullable<int> _CarryForwarded;
		
		private System.Nullable<int> _LeavesTaken;
		
		private System.Nullable<int> _Balance;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<bool> _Edit;
		
		private System.Nullable<int> _CreatedOn;
		
		private System.Nullable<System.DateTime> _CreatedBy;
		
		private System.Nullable<int> _UpdatedOn;
		
		private System.Nullable<System.DateTime> _UpdatedBy;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLeaveForChanging(System.Nullable<byte> value);
    partial void OnLeaveForChanged();
    partial void OnObjectIdChanging(System.Nullable<long> value);
    partial void OnObjectIdChanged();
    partial void OnApplicableFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicableFromDateChanged();
    partial void OnApplicableToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApplicableToDateChanged();
    partial void OnLeaveTypeIdChanging(System.Nullable<byte> value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveTypeCountChanging(System.Nullable<int> value);
    partial void OnLeaveTypeCountChanged();
    partial void OnCarryForwardedChanging(System.Nullable<int> value);
    partial void OnCarryForwardedChanged();
    partial void OnLeavesTakenChanging(System.Nullable<int> value);
    partial void OnLeavesTakenChanged();
    partial void OnBalanceChanging(System.Nullable<int> value);
    partial void OnBalanceChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnEditChanging(System.Nullable<bool> value);
    partial void OnEditChanged();
    partial void OnCreatedOnChanging(System.Nullable<int> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedOnChanging(System.Nullable<int> value);
    partial void OnUpdatedOnChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedByChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public OfficialLeave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveFor", DbType="TinyInt")]
		public System.Nullable<byte> LeaveFor
		{
			get
			{
				return this._LeaveFor;
			}
			set
			{
				if ((this._LeaveFor != value))
				{
					this.OnLeaveForChanging(value);
					this.SendPropertyChanging();
					this._LeaveFor = value;
					this.SendPropertyChanged("LeaveFor");
					this.OnLeaveForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt")]
		public System.Nullable<long> ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicableFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplicableFromDate
		{
			get
			{
				return this._ApplicableFromDate;
			}
			set
			{
				if ((this._ApplicableFromDate != value))
				{
					this.OnApplicableFromDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicableFromDate = value;
					this.SendPropertyChanged("ApplicableFromDate");
					this.OnApplicableFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicableToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApplicableToDate
		{
			get
			{
				return this._ApplicableToDate;
			}
			set
			{
				if ((this._ApplicableToDate != value))
				{
					this.OnApplicableToDateChanging(value);
					this.SendPropertyChanging();
					this._ApplicableToDate = value;
					this.SendPropertyChanged("ApplicableToDate");
					this.OnApplicableToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="TinyInt")]
		public System.Nullable<byte> LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeCount", DbType="Int")]
		public System.Nullable<int> LeaveTypeCount
		{
			get
			{
				return this._LeaveTypeCount;
			}
			set
			{
				if ((this._LeaveTypeCount != value))
				{
					this.OnLeaveTypeCountChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeCount = value;
					this.SendPropertyChanged("LeaveTypeCount");
					this.OnLeaveTypeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarryForwarded", DbType="Int")]
		public System.Nullable<int> CarryForwarded
		{
			get
			{
				return this._CarryForwarded;
			}
			set
			{
				if ((this._CarryForwarded != value))
				{
					this.OnCarryForwardedChanging(value);
					this.SendPropertyChanging();
					this._CarryForwarded = value;
					this.SendPropertyChanged("CarryForwarded");
					this.OnCarryForwardedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeavesTaken", DbType="Int")]
		public System.Nullable<int> LeavesTaken
		{
			get
			{
				return this._LeavesTaken;
			}
			set
			{
				if ((this._LeavesTaken != value))
				{
					this.OnLeavesTakenChanging(value);
					this.SendPropertyChanging();
					this._LeavesTaken = value;
					this.SendPropertyChanged("LeavesTaken");
					this.OnLeavesTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Int")]
		public System.Nullable<int> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edit", DbType="Bit")]
		public System.Nullable<bool> Edit
		{
			get
			{
				return this._Edit;
			}
			set
			{
				if ((this._Edit != value))
				{
					this.OnEditChanging(value);
					this.SendPropertyChanging();
					this._Edit = value;
					this.SendPropertyChanged("Edit");
					this.OnEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="Int")]
		public System.Nullable<int> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedOn", DbType="Int")]
		public System.Nullable<int> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this.OnUpdatedOnChanging(value);
					this.SendPropertyChanging();
					this._UpdatedOn = value;
					this.SendPropertyChanged("UpdatedOn");
					this.OnUpdatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private string _PageName;
		
		private System.Nullable<bool> _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public Page()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PunchIn")]
	public partial class PunchIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PId;
		
		private int _UserId;
		
		private System.DateTime _PunchinTime;
		
		private System.Nullable<System.DateTime> _PunchoutTime;
		
		private System.Nullable<bool> _PunchinType;
		
		private System.Nullable<int> _PILocationId;
		
		private string _PILatitudeLongitude;
		
		private System.Nullable<bool> _PunchoutType;
		
		private System.Nullable<int> _POLocationId;
		
		private string _POLatitudeLongitude;
		
		private string _PunchinOutsideLocationReason;
		
		private string _PunchoutOutsideLocationReason;
		
		private bool _SystemPunchout;
		
		private bool _LatePunchin;
		
		private string _LatePunchinReason;
		
		private bool _EarlyPunchout;
		
		private string _EarlyPunchoutReason;
		
		private string _PunchinDeviceId;
		
		private string _PunchoutDeviceId;
		
		private string _WorkHourReason;
		
		private string _WorkingHour;
		
		private string _ExtraWorkingHour;
		
		private bool _IsHalfDay;
		
		private bool _PunchinOnHoliday;
		
		private bool _PunchinOnWeekoff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIdChanging(int value);
    partial void OnPIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPunchinTimeChanging(System.DateTime value);
    partial void OnPunchinTimeChanged();
    partial void OnPunchoutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPunchoutTimeChanged();
    partial void OnPunchinTypeChanging(System.Nullable<bool> value);
    partial void OnPunchinTypeChanged();
    partial void OnPILocationIdChanging(System.Nullable<int> value);
    partial void OnPILocationIdChanged();
    partial void OnPILatitudeLongitudeChanging(string value);
    partial void OnPILatitudeLongitudeChanged();
    partial void OnPunchoutTypeChanging(System.Nullable<bool> value);
    partial void OnPunchoutTypeChanged();
    partial void OnPOLocationIdChanging(System.Nullable<int> value);
    partial void OnPOLocationIdChanged();
    partial void OnPOLatitudeLongitudeChanging(string value);
    partial void OnPOLatitudeLongitudeChanged();
    partial void OnPunchinOutsideLocationReasonChanging(string value);
    partial void OnPunchinOutsideLocationReasonChanged();
    partial void OnPunchoutOutsideLocationReasonChanging(string value);
    partial void OnPunchoutOutsideLocationReasonChanged();
    partial void OnSystemPunchoutChanging(bool value);
    partial void OnSystemPunchoutChanged();
    partial void OnLatePunchinChanging(bool value);
    partial void OnLatePunchinChanged();
    partial void OnLatePunchinReasonChanging(string value);
    partial void OnLatePunchinReasonChanged();
    partial void OnEarlyPunchoutChanging(bool value);
    partial void OnEarlyPunchoutChanged();
    partial void OnEarlyPunchoutReasonChanging(string value);
    partial void OnEarlyPunchoutReasonChanged();
    partial void OnPunchinDeviceIdChanging(string value);
    partial void OnPunchinDeviceIdChanged();
    partial void OnPunchoutDeviceIdChanging(string value);
    partial void OnPunchoutDeviceIdChanged();
    partial void OnWorkHourReasonChanging(string value);
    partial void OnWorkHourReasonChanged();
    partial void OnWorkingHourChanging(string value);
    partial void OnWorkingHourChanged();
    partial void OnExtraWorkingHourChanging(string value);
    partial void OnExtraWorkingHourChanged();
    partial void OnIsHalfDayChanging(bool value);
    partial void OnIsHalfDayChanged();
    partial void OnPunchinOnHolidayChanging(bool value);
    partial void OnPunchinOnHolidayChanged();
    partial void OnPunchinOnWeekoffChanging(bool value);
    partial void OnPunchinOnWeekoffChanged();
    #endregion
		
		public PunchIn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PId
		{
			get
			{
				return this._PId;
			}
			set
			{
				if ((this._PId != value))
				{
					this.OnPIdChanging(value);
					this.SendPropertyChanging();
					this._PId = value;
					this.SendPropertyChanged("PId");
					this.OnPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinTime", DbType="DateTime NOT NULL")]
		public System.DateTime PunchinTime
		{
			get
			{
				return this._PunchinTime;
			}
			set
			{
				if ((this._PunchinTime != value))
				{
					this.OnPunchinTimeChanging(value);
					this.SendPropertyChanging();
					this._PunchinTime = value;
					this.SendPropertyChanged("PunchinTime");
					this.OnPunchinTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchoutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PunchoutTime
		{
			get
			{
				return this._PunchoutTime;
			}
			set
			{
				if ((this._PunchoutTime != value))
				{
					this.OnPunchoutTimeChanging(value);
					this.SendPropertyChanging();
					this._PunchoutTime = value;
					this.SendPropertyChanged("PunchoutTime");
					this.OnPunchoutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinType", DbType="Bit")]
		public System.Nullable<bool> PunchinType
		{
			get
			{
				return this._PunchinType;
			}
			set
			{
				if ((this._PunchinType != value))
				{
					this.OnPunchinTypeChanging(value);
					this.SendPropertyChanging();
					this._PunchinType = value;
					this.SendPropertyChanged("PunchinType");
					this.OnPunchinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PILocationId", DbType="Int")]
		public System.Nullable<int> PILocationId
		{
			get
			{
				return this._PILocationId;
			}
			set
			{
				if ((this._PILocationId != value))
				{
					this.OnPILocationIdChanging(value);
					this.SendPropertyChanging();
					this._PILocationId = value;
					this.SendPropertyChanged("PILocationId");
					this.OnPILocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PILatitudeLongitude", DbType="VarChar(50)")]
		public string PILatitudeLongitude
		{
			get
			{
				return this._PILatitudeLongitude;
			}
			set
			{
				if ((this._PILatitudeLongitude != value))
				{
					this.OnPILatitudeLongitudeChanging(value);
					this.SendPropertyChanging();
					this._PILatitudeLongitude = value;
					this.SendPropertyChanged("PILatitudeLongitude");
					this.OnPILatitudeLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchoutType", DbType="Bit")]
		public System.Nullable<bool> PunchoutType
		{
			get
			{
				return this._PunchoutType;
			}
			set
			{
				if ((this._PunchoutType != value))
				{
					this.OnPunchoutTypeChanging(value);
					this.SendPropertyChanging();
					this._PunchoutType = value;
					this.SendPropertyChanged("PunchoutType");
					this.OnPunchoutTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POLocationId", DbType="Int")]
		public System.Nullable<int> POLocationId
		{
			get
			{
				return this._POLocationId;
			}
			set
			{
				if ((this._POLocationId != value))
				{
					this.OnPOLocationIdChanging(value);
					this.SendPropertyChanging();
					this._POLocationId = value;
					this.SendPropertyChanged("POLocationId");
					this.OnPOLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POLatitudeLongitude", DbType="VarChar(50)")]
		public string POLatitudeLongitude
		{
			get
			{
				return this._POLatitudeLongitude;
			}
			set
			{
				if ((this._POLatitudeLongitude != value))
				{
					this.OnPOLatitudeLongitudeChanging(value);
					this.SendPropertyChanging();
					this._POLatitudeLongitude = value;
					this.SendPropertyChanged("POLatitudeLongitude");
					this.OnPOLatitudeLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinOutsideLocationReason", DbType="VarChar(MAX)")]
		public string PunchinOutsideLocationReason
		{
			get
			{
				return this._PunchinOutsideLocationReason;
			}
			set
			{
				if ((this._PunchinOutsideLocationReason != value))
				{
					this.OnPunchinOutsideLocationReasonChanging(value);
					this.SendPropertyChanging();
					this._PunchinOutsideLocationReason = value;
					this.SendPropertyChanged("PunchinOutsideLocationReason");
					this.OnPunchinOutsideLocationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchoutOutsideLocationReason", DbType="VarChar(MAX)")]
		public string PunchoutOutsideLocationReason
		{
			get
			{
				return this._PunchoutOutsideLocationReason;
			}
			set
			{
				if ((this._PunchoutOutsideLocationReason != value))
				{
					this.OnPunchoutOutsideLocationReasonChanging(value);
					this.SendPropertyChanging();
					this._PunchoutOutsideLocationReason = value;
					this.SendPropertyChanged("PunchoutOutsideLocationReason");
					this.OnPunchoutOutsideLocationReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemPunchout", DbType="Bit NOT NULL")]
		public bool SystemPunchout
		{
			get
			{
				return this._SystemPunchout;
			}
			set
			{
				if ((this._SystemPunchout != value))
				{
					this.OnSystemPunchoutChanging(value);
					this.SendPropertyChanging();
					this._SystemPunchout = value;
					this.SendPropertyChanged("SystemPunchout");
					this.OnSystemPunchoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatePunchin", DbType="Bit NOT NULL")]
		public bool LatePunchin
		{
			get
			{
				return this._LatePunchin;
			}
			set
			{
				if ((this._LatePunchin != value))
				{
					this.OnLatePunchinChanging(value);
					this.SendPropertyChanging();
					this._LatePunchin = value;
					this.SendPropertyChanged("LatePunchin");
					this.OnLatePunchinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatePunchinReason", DbType="VarChar(MAX)")]
		public string LatePunchinReason
		{
			get
			{
				return this._LatePunchinReason;
			}
			set
			{
				if ((this._LatePunchinReason != value))
				{
					this.OnLatePunchinReasonChanging(value);
					this.SendPropertyChanging();
					this._LatePunchinReason = value;
					this.SendPropertyChanged("LatePunchinReason");
					this.OnLatePunchinReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarlyPunchout", DbType="Bit NOT NULL")]
		public bool EarlyPunchout
		{
			get
			{
				return this._EarlyPunchout;
			}
			set
			{
				if ((this._EarlyPunchout != value))
				{
					this.OnEarlyPunchoutChanging(value);
					this.SendPropertyChanging();
					this._EarlyPunchout = value;
					this.SendPropertyChanged("EarlyPunchout");
					this.OnEarlyPunchoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarlyPunchoutReason", DbType="VarChar(MAX)")]
		public string EarlyPunchoutReason
		{
			get
			{
				return this._EarlyPunchoutReason;
			}
			set
			{
				if ((this._EarlyPunchoutReason != value))
				{
					this.OnEarlyPunchoutReasonChanging(value);
					this.SendPropertyChanging();
					this._EarlyPunchoutReason = value;
					this.SendPropertyChanged("EarlyPunchoutReason");
					this.OnEarlyPunchoutReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinDeviceId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PunchinDeviceId
		{
			get
			{
				return this._PunchinDeviceId;
			}
			set
			{
				if ((this._PunchinDeviceId != value))
				{
					this.OnPunchinDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._PunchinDeviceId = value;
					this.SendPropertyChanged("PunchinDeviceId");
					this.OnPunchinDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchoutDeviceId", DbType="VarChar(50)")]
		public string PunchoutDeviceId
		{
			get
			{
				return this._PunchoutDeviceId;
			}
			set
			{
				if ((this._PunchoutDeviceId != value))
				{
					this.OnPunchoutDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._PunchoutDeviceId = value;
					this.SendPropertyChanged("PunchoutDeviceId");
					this.OnPunchoutDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkHourReason", DbType="VarChar(MAX)")]
		public string WorkHourReason
		{
			get
			{
				return this._WorkHourReason;
			}
			set
			{
				if ((this._WorkHourReason != value))
				{
					this.OnWorkHourReasonChanging(value);
					this.SendPropertyChanging();
					this._WorkHourReason = value;
					this.SendPropertyChanged("WorkHourReason");
					this.OnWorkHourReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHour", DbType="NVarChar(20)")]
		public string WorkingHour
		{
			get
			{
				return this._WorkingHour;
			}
			set
			{
				if ((this._WorkingHour != value))
				{
					this.OnWorkingHourChanging(value);
					this.SendPropertyChanging();
					this._WorkingHour = value;
					this.SendPropertyChanged("WorkingHour");
					this.OnWorkingHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraWorkingHour", DbType="NVarChar(20)")]
		public string ExtraWorkingHour
		{
			get
			{
				return this._ExtraWorkingHour;
			}
			set
			{
				if ((this._ExtraWorkingHour != value))
				{
					this.OnExtraWorkingHourChanging(value);
					this.SendPropertyChanging();
					this._ExtraWorkingHour = value;
					this.SendPropertyChanged("ExtraWorkingHour");
					this.OnExtraWorkingHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHalfDay", DbType="Bit NOT NULL")]
		public bool IsHalfDay
		{
			get
			{
				return this._IsHalfDay;
			}
			set
			{
				if ((this._IsHalfDay != value))
				{
					this.OnIsHalfDayChanging(value);
					this.SendPropertyChanging();
					this._IsHalfDay = value;
					this.SendPropertyChanged("IsHalfDay");
					this.OnIsHalfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinOnHoliday", DbType="Bit NOT NULL")]
		public bool PunchinOnHoliday
		{
			get
			{
				return this._PunchinOnHoliday;
			}
			set
			{
				if ((this._PunchinOnHoliday != value))
				{
					this.OnPunchinOnHolidayChanging(value);
					this.SendPropertyChanging();
					this._PunchinOnHoliday = value;
					this.SendPropertyChanged("PunchinOnHoliday");
					this.OnPunchinOnHolidayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinOnWeekoff", DbType="Bit NOT NULL")]
		public bool PunchinOnWeekoff
		{
			get
			{
				return this._PunchinOnWeekoff;
			}
			set
			{
				if ((this._PunchinOnWeekoff != value))
				{
					this.OnPunchinOnWeekoffChanging(value);
					this.SendPropertyChanging();
					this._PunchinOnWeekoff = value;
					this.SendPropertyChanged("PunchinOnWeekoff");
					this.OnPunchinOnWeekoffChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleMaster")]
	public partial class RoleMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public RoleMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemSetting")]
	public partial class SystemSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _KeyName;
		
		private string _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public SystemSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="NVarChar(50)")]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(50)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccess")]
	public partial class UserAccess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<long> _UserAccessID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnUserAccessIDChanging(System.Nullable<long> value);
    partial void OnUserAccessIDChanged();
    #endregion
		
		public UserAccess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccessID", DbType="BigInt")]
		public System.Nullable<long> UserAccessID
		{
			get
			{
				return this._UserAccessID;
			}
			set
			{
				if ((this._UserAccessID != value))
				{
					this.OnUserAccessIDChanging(value);
					this.SendPropertyChanging();
					this._UserAccessID = value;
					this.SendPropertyChanged("UserAccessID");
					this.OnUserAccessIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserComponentRights")]
	public partial class UserComponentRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComponentRightId;
		
		private int _UserId;
		
		private int _ComponentId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComponentRightIdChanging(int value);
    partial void OnComponentRightIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnComponentIdChanging(int value);
    partial void OnComponentIdChanged();
    #endregion
		
		public UserComponentRight()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentRightId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComponentRightId
		{
			get
			{
				return this._ComponentRightId;
			}
			set
			{
				if ((this._ComponentRightId != value))
				{
					this.OnComponentRightIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentRightId = value;
					this.SendPropertyChanged("ComponentRightId");
					this.OnComponentRightIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentId", DbType="Int NOT NULL")]
		public int ComponentId
		{
			get
			{
				return this._ComponentId;
			}
			set
			{
				if ((this._ComponentId != value))
				{
					this.OnComponentIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentId = value;
					this.SendPropertyChanged("ComponentId");
					this.OnComponentIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDevice")]
	public partial class UserDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UDId;
		
		private int _UserId;
		
		private string _DeviceId;
		
		private string _DeviceType;
		
		private bool _IsApproved;
		
		private bool _IsDeleted;
		
		private System.DateTime _RequestDate;
		
		private string _Description;
		
		private string _AccessToken;
		
		private int _ApprovedBy;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private string _DeviceName;
		
		private string _OSVersion;
		
		private string _LocationName;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUDIdChanging(int value);
    partial void OnUDIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnDeviceTypeChanging(string value);
    partial void OnDeviceTypeChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAccessTokenChanging(string value);
    partial void OnAccessTokenChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    partial void OnOSVersionChanging(string value);
    partial void OnOSVersionChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public UserDevice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UDId
		{
			get
			{
				return this._UDId;
			}
			set
			{
				if ((this._UDId != value))
				{
					this.OnUDIdChanging(value);
					this.SendPropertyChanging();
					this._UDId = value;
					this.SendPropertyChanged("UDId");
					this.OnUDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceType
		{
			get
			{
				return this._DeviceType;
			}
			set
			{
				if ((this._DeviceType != value))
				{
					this.OnDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._DeviceType = value;
					this.SendPropertyChanged("DeviceType");
					this.OnDeviceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessToken", DbType="VarChar(MAX)")]
		public string AccessToken
		{
			get
			{
				return this._AccessToken;
			}
			set
			{
				if ((this._AccessToken != value))
				{
					this.OnAccessTokenChanging(value);
					this.SendPropertyChanging();
					this._AccessToken = value;
					this.SendPropertyChanged("AccessToken");
					this.OnAccessTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(150)")]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OSVersion", DbType="NVarChar(50)")]
		public string OSVersion
		{
			get
			{
				return this._OSVersion;
			}
			set
			{
				if ((this._OSVersion != value))
				{
					this.OnOSVersionChanging(value);
					this.SendPropertyChanging();
					this._OSVersion = value;
					this.SendPropertyChanged("OSVersion");
					this.OnOSVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(300)")]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLeaveApproval")]
	public partial class UserLeaveApproval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApprovalId;
		
		private int _LeaveId;
		
		private bool _IsApprovedFirst;
		
		private System.Nullable<bool> _IsApprovedSecond;
		
		private int _FirstApprovedBy;
		
		private System.Nullable<int> _SecondApprovedBy;
		
		private string _FirstDescription;
		
		private string _SecondDescription;
		
		private System.DateTime _FirstCreatedDate;
		
		private System.DateTime _FirstUpdatedDate;
		
		private System.Nullable<System.DateTime> _SecondCreatedDate;
		
		private System.Nullable<System.DateTime> _SecondUpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApprovalIdChanging(int value);
    partial void OnApprovalIdChanged();
    partial void OnLeaveIdChanging(int value);
    partial void OnLeaveIdChanged();
    partial void OnIsApprovedFirstChanging(bool value);
    partial void OnIsApprovedFirstChanged();
    partial void OnIsApprovedSecondChanging(System.Nullable<bool> value);
    partial void OnIsApprovedSecondChanged();
    partial void OnFirstApprovedByChanging(int value);
    partial void OnFirstApprovedByChanged();
    partial void OnSecondApprovedByChanging(System.Nullable<int> value);
    partial void OnSecondApprovedByChanged();
    partial void OnFirstDescriptionChanging(string value);
    partial void OnFirstDescriptionChanged();
    partial void OnSecondDescriptionChanging(string value);
    partial void OnSecondDescriptionChanged();
    partial void OnFirstCreatedDateChanging(System.DateTime value);
    partial void OnFirstCreatedDateChanged();
    partial void OnFirstUpdatedDateChanging(System.DateTime value);
    partial void OnFirstUpdatedDateChanged();
    partial void OnSecondCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSecondCreatedDateChanged();
    partial void OnSecondUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSecondUpdatedDateChanged();
    #endregion
		
		public UserLeaveApproval()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApprovalId
		{
			get
			{
				return this._ApprovalId;
			}
			set
			{
				if ((this._ApprovalId != value))
				{
					this.OnApprovalIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovalId = value;
					this.SendPropertyChanged("ApprovalId");
					this.OnApprovalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveId", DbType="Int NOT NULL")]
		public int LeaveId
		{
			get
			{
				return this._LeaveId;
			}
			set
			{
				if ((this._LeaveId != value))
				{
					this.OnLeaveIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveId = value;
					this.SendPropertyChanged("LeaveId");
					this.OnLeaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprovedFirst", DbType="Bit NOT NULL")]
		public bool IsApprovedFirst
		{
			get
			{
				return this._IsApprovedFirst;
			}
			set
			{
				if ((this._IsApprovedFirst != value))
				{
					this.OnIsApprovedFirstChanging(value);
					this.SendPropertyChanging();
					this._IsApprovedFirst = value;
					this.SendPropertyChanged("IsApprovedFirst");
					this.OnIsApprovedFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprovedSecond", DbType="Bit")]
		public System.Nullable<bool> IsApprovedSecond
		{
			get
			{
				return this._IsApprovedSecond;
			}
			set
			{
				if ((this._IsApprovedSecond != value))
				{
					this.OnIsApprovedSecondChanging(value);
					this.SendPropertyChanging();
					this._IsApprovedSecond = value;
					this.SendPropertyChanged("IsApprovedSecond");
					this.OnIsApprovedSecondChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstApprovedBy", DbType="Int NOT NULL")]
		public int FirstApprovedBy
		{
			get
			{
				return this._FirstApprovedBy;
			}
			set
			{
				if ((this._FirstApprovedBy != value))
				{
					this.OnFirstApprovedByChanging(value);
					this.SendPropertyChanging();
					this._FirstApprovedBy = value;
					this.SendPropertyChanged("FirstApprovedBy");
					this.OnFirstApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondApprovedBy", DbType="Int")]
		public System.Nullable<int> SecondApprovedBy
		{
			get
			{
				return this._SecondApprovedBy;
			}
			set
			{
				if ((this._SecondApprovedBy != value))
				{
					this.OnSecondApprovedByChanging(value);
					this.SendPropertyChanging();
					this._SecondApprovedBy = value;
					this.SendPropertyChanged("SecondApprovedBy");
					this.OnSecondApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDescription", DbType="NVarChar(MAX)")]
		public string FirstDescription
		{
			get
			{
				return this._FirstDescription;
			}
			set
			{
				if ((this._FirstDescription != value))
				{
					this.OnFirstDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FirstDescription = value;
					this.SendPropertyChanged("FirstDescription");
					this.OnFirstDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondDescription", DbType="NVarChar(MAX)")]
		public string SecondDescription
		{
			get
			{
				return this._SecondDescription;
			}
			set
			{
				if ((this._SecondDescription != value))
				{
					this.OnSecondDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SecondDescription = value;
					this.SendPropertyChanged("SecondDescription");
					this.OnSecondDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstCreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime FirstCreatedDate
		{
			get
			{
				return this._FirstCreatedDate;
			}
			set
			{
				if ((this._FirstCreatedDate != value))
				{
					this.OnFirstCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._FirstCreatedDate = value;
					this.SendPropertyChanged("FirstCreatedDate");
					this.OnFirstCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime FirstUpdatedDate
		{
			get
			{
				return this._FirstUpdatedDate;
			}
			set
			{
				if ((this._FirstUpdatedDate != value))
				{
					this.OnFirstUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._FirstUpdatedDate = value;
					this.SendPropertyChanged("FirstUpdatedDate");
					this.OnFirstUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SecondCreatedDate
		{
			get
			{
				return this._SecondCreatedDate;
			}
			set
			{
				if ((this._SecondCreatedDate != value))
				{
					this.OnSecondCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._SecondCreatedDate = value;
					this.SendPropertyChanged("SecondCreatedDate");
					this.OnSecondCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SecondUpdatedDate
		{
			get
			{
				return this._SecondUpdatedDate;
			}
			set
			{
				if ((this._SecondUpdatedDate != value))
				{
					this.OnSecondUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._SecondUpdatedDate = value;
					this.SendPropertyChanged("SecondUpdatedDate");
					this.OnSecondUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLeaveTypeCount")]
	public partial class UserLeaveTypeCount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveCountId;
		
		private int _UserId;
		
		private int _LeaveTypeId;
		
		private int _LeaveCountByType;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _UpdatedBy;
		
		private System.DateTime _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveCountIdChanging(int value);
    partial void OnLeaveCountIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLeaveTypeIdChanging(int value);
    partial void OnLeaveTypeIdChanged();
    partial void OnLeaveCountByTypeChanging(int value);
    partial void OnLeaveCountByTypeChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public UserLeaveTypeCount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveCountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveCountId
		{
			get
			{
				return this._LeaveCountId;
			}
			set
			{
				if ((this._LeaveCountId != value))
				{
					this.OnLeaveCountIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveCountId = value;
					this.SendPropertyChanged("LeaveCountId");
					this.OnLeaveCountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeId", DbType="Int NOT NULL")]
		public int LeaveTypeId
		{
			get
			{
				return this._LeaveTypeId;
			}
			set
			{
				if ((this._LeaveTypeId != value))
				{
					this.OnLeaveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeId = value;
					this.SendPropertyChanged("LeaveTypeId");
					this.OnLeaveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveCountByType", DbType="Int NOT NULL")]
		public int LeaveCountByType
		{
			get
			{
				return this._LeaveCountByType;
			}
			set
			{
				if ((this._LeaveCountByType != value))
				{
					this.OnLeaveCountByTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveCountByType = value;
					this.SendPropertyChanged("LeaveCountByType");
					this.OnLeaveCountByTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLocation")]
	public partial class UserLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ULId;
		
		private int _UserId;
		
		private int _LocationId;
		
		private int _UserDeviceId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnULIdChanging(int value);
    partial void OnULIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLocationIdChanging(int value);
    partial void OnLocationIdChanged();
    partial void OnUserDeviceIdChanging(int value);
    partial void OnUserDeviceIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public UserLocation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ULId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ULId
		{
			get
			{
				return this._ULId;
			}
			set
			{
				if ((this._ULId != value))
				{
					this.OnULIdChanging(value);
					this.SendPropertyChanging();
					this._ULId = value;
					this.SendPropertyChanged("ULId");
					this.OnULIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationId", DbType="Int NOT NULL")]
		public int LocationId
		{
			get
			{
				return this._LocationId;
			}
			set
			{
				if ((this._LocationId != value))
				{
					this.OnLocationIdChanging(value);
					this.SendPropertyChanging();
					this._LocationId = value;
					this.SendPropertyChanged("LocationId");
					this.OnLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDeviceId", DbType="Int NOT NULL")]
		public int UserDeviceId
		{
			get
			{
				return this._UserDeviceId;
			}
			set
			{
				if ((this._UserDeviceId != value))
				{
					this.OnUserDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._UserDeviceId = value;
					this.SendPropertyChanged("UserDeviceId");
					this.OnUserDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRights")]
	public partial class UserRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RightId;
		
		private int _UserId;
		
		private int _MenuId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRightIdChanging(int value);
    partial void OnRightIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    #endregion
		
		public UserRight()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RightId
		{
			get
			{
				return this._RightId;
			}
			set
			{
				if ((this._RightId != value))
				{
					this.OnRightIdChanging(value);
					this.SendPropertyChanging();
					this._RightId = value;
					this.SendPropertyChanged("RightId");
					this.OnRightIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL")]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserCode;
		
		private string _UserName;
		
		private string _Password;
		
		private int _CompanyID;
		
		private System.Nullable<int> _GroupID;
		
		private int _RoleId;
		
		private int _TopId;
		
		private string _FirstName;
		
		private string _LastName;
		
		private System.Nullable<byte> _GenderTypeId;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _ProfilePic;
		
		private string _MaritalStatus;
		
		private bool _PunchinStatus;
		
		private System.Nullable<int> _EmployeeTypeId;
		
		private string _City;
		
		private string _State;
		
		private string _Country;
		
		private string _Pincode;
		
		private string _EmailID;
		
		private string _EmailIDPer;
		
		private string _MobileNoCmp;
		
		private string _PhoneNoPer;
		
		private int _LeaveApprovalTypeId;
		
		private System.Nullable<int> _LeaveApprovalSecondLevelId;
		
		private System.Nullable<byte> _Status;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedBy;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnTopIdChanging(int value);
    partial void OnTopIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderTypeIdChanging(System.Nullable<byte> value);
    partial void OnGenderTypeIdChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnProfilePicChanging(string value);
    partial void OnProfilePicChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnPunchinStatusChanging(bool value);
    partial void OnPunchinStatusChanged();
    partial void OnEmployeeTypeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeTypeIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPincodeChanging(string value);
    partial void OnPincodeChanged();
    partial void OnEmailIDChanging(string value);
    partial void OnEmailIDChanged();
    partial void OnEmailIDPerChanging(string value);
    partial void OnEmailIDPerChanged();
    partial void OnMobileNoCmpChanging(string value);
    partial void OnMobileNoCmpChanged();
    partial void OnPhoneNoPerChanging(string value);
    partial void OnPhoneNoPerChanged();
    partial void OnLeaveApprovalTypeIdChanging(int value);
    partial void OnLeaveApprovalTypeIdChanged();
    partial void OnLeaveApprovalSecondLevelIdChanging(System.Nullable<int> value);
    partial void OnLeaveApprovalSecondLevelIdChanged();
    partial void OnStatusChanging(System.Nullable<byte> value);
    partial void OnStatusChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(int value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(50)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopId", DbType="Int NOT NULL")]
		public int TopId
		{
			get
			{
				return this._TopId;
			}
			set
			{
				if ((this._TopId != value))
				{
					this.OnTopIdChanging(value);
					this.SendPropertyChanging();
					this._TopId = value;
					this.SendPropertyChanged("TopId");
					this.OnTopIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderTypeId", DbType="TinyInt")]
		public System.Nullable<byte> GenderTypeId
		{
			get
			{
				return this._GenderTypeId;
			}
			set
			{
				if ((this._GenderTypeId != value))
				{
					this.OnGenderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GenderTypeId = value;
					this.SendPropertyChanged("GenderTypeId");
					this.OnGenderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePic", DbType="NVarChar(50)")]
		public string ProfilePic
		{
			get
			{
				return this._ProfilePic;
			}
			set
			{
				if ((this._ProfilePic != value))
				{
					this.OnProfilePicChanging(value);
					this.SendPropertyChanging();
					this._ProfilePic = value;
					this.SendPropertyChanged("ProfilePic");
					this.OnProfilePicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunchinStatus", DbType="Bit NOT NULL")]
		public bool PunchinStatus
		{
			get
			{
				return this._PunchinStatus;
			}
			set
			{
				if ((this._PunchinStatus != value))
				{
					this.OnPunchinStatusChanging(value);
					this.SendPropertyChanging();
					this._PunchinStatus = value;
					this.SendPropertyChanged("PunchinStatus");
					this.OnPunchinStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeId", DbType="Int")]
		public System.Nullable<int> EmployeeTypeId
		{
			get
			{
				return this._EmployeeTypeId;
			}
			set
			{
				if ((this._EmployeeTypeId != value))
				{
					this.OnEmployeeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeId = value;
					this.SendPropertyChanged("EmployeeTypeId");
					this.OnEmployeeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(100)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pincode", DbType="NVarChar(10)")]
		public string Pincode
		{
			get
			{
				return this._Pincode;
			}
			set
			{
				if ((this._Pincode != value))
				{
					this.OnPincodeChanging(value);
					this.SendPropertyChanging();
					this._Pincode = value;
					this.SendPropertyChanged("Pincode");
					this.OnPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailID", DbType="NVarChar(50)")]
		public string EmailID
		{
			get
			{
				return this._EmailID;
			}
			set
			{
				if ((this._EmailID != value))
				{
					this.OnEmailIDChanging(value);
					this.SendPropertyChanging();
					this._EmailID = value;
					this.SendPropertyChanged("EmailID");
					this.OnEmailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailIDPer", DbType="NVarChar(50)")]
		public string EmailIDPer
		{
			get
			{
				return this._EmailIDPer;
			}
			set
			{
				if ((this._EmailIDPer != value))
				{
					this.OnEmailIDPerChanging(value);
					this.SendPropertyChanging();
					this._EmailIDPer = value;
					this.SendPropertyChanged("EmailIDPer");
					this.OnEmailIDPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNoCmp", DbType="NVarChar(50)")]
		public string MobileNoCmp
		{
			get
			{
				return this._MobileNoCmp;
			}
			set
			{
				if ((this._MobileNoCmp != value))
				{
					this.OnMobileNoCmpChanging(value);
					this.SendPropertyChanging();
					this._MobileNoCmp = value;
					this.SendPropertyChanged("MobileNoCmp");
					this.OnMobileNoCmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNoPer", DbType="NVarChar(50)")]
		public string PhoneNoPer
		{
			get
			{
				return this._PhoneNoPer;
			}
			set
			{
				if ((this._PhoneNoPer != value))
				{
					this.OnPhoneNoPerChanging(value);
					this.SendPropertyChanging();
					this._PhoneNoPer = value;
					this.SendPropertyChanged("PhoneNoPer");
					this.OnPhoneNoPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApprovalTypeId", DbType="Int NOT NULL")]
		public int LeaveApprovalTypeId
		{
			get
			{
				return this._LeaveApprovalTypeId;
			}
			set
			{
				if ((this._LeaveApprovalTypeId != value))
				{
					this.OnLeaveApprovalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveApprovalTypeId = value;
					this.SendPropertyChanged("LeaveApprovalTypeId");
					this.OnLeaveApprovalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveApprovalSecondLevelId", DbType="Int")]
		public System.Nullable<int> LeaveApprovalSecondLevelId
		{
			get
			{
				return this._LeaveApprovalSecondLevelId;
			}
			set
			{
				if ((this._LeaveApprovalSecondLevelId != value))
				{
					this.OnLeaveApprovalSecondLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LeaveApprovalSecondLevelId = value;
					this.SendPropertyChanged("LeaveApprovalSecondLevelId");
					this.OnLeaveApprovalSecondLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt")]
		public System.Nullable<byte> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="Int NOT NULL")]
		public int UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserWeekOffDay")]
	public partial class UserWeekOffDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WeekOffId;
		
		private int _UserId;
		
		private string _WeekOffDay;
		
		private bool _IsAlternative;
		
		private string _AlternativeDay;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeekOffIdChanging(int value);
    partial void OnWeekOffIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnWeekOffDayChanging(string value);
    partial void OnWeekOffDayChanged();
    partial void OnIsAlternativeChanging(bool value);
    partial void OnIsAlternativeChanged();
    partial void OnAlternativeDayChanging(string value);
    partial void OnAlternativeDayChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public UserWeekOffDay()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WeekOffId
		{
			get
			{
				return this._WeekOffId;
			}
			set
			{
				if ((this._WeekOffId != value))
				{
					this.OnWeekOffIdChanging(value);
					this.SendPropertyChanging();
					this._WeekOffId = value;
					this.SendPropertyChanged("WeekOffId");
					this.OnWeekOffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeekOffDay", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string WeekOffDay
		{
			get
			{
				return this._WeekOffDay;
			}
			set
			{
				if ((this._WeekOffDay != value))
				{
					this.OnWeekOffDayChanging(value);
					this.SendPropertyChanging();
					this._WeekOffDay = value;
					this.SendPropertyChanged("WeekOffDay");
					this.OnWeekOffDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlternative", DbType="Bit NOT NULL")]
		public bool IsAlternative
		{
			get
			{
				return this._IsAlternative;
			}
			set
			{
				if ((this._IsAlternative != value))
				{
					this.OnIsAlternativeChanging(value);
					this.SendPropertyChanging();
					this._IsAlternative = value;
					this.SendPropertyChanged("IsAlternative");
					this.OnIsAlternativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeDay", DbType="VarChar(50)")]
		public string AlternativeDay
		{
			get
			{
				return this._AlternativeDay;
			}
			set
			{
				if ((this._AlternativeDay != value))
				{
					this.OnAlternativeDayChanging(value);
					this.SendPropertyChanging();
					this._AlternativeDay = value;
					this.SendPropertyChanged("AlternativeDay");
					this.OnAlternativeDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VersionMaster")]
	public partial class VersionMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VersionId;
		
		private string _PCVersion;
		
		private string _IOSVersion;
		
		private string _AndroidVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnPCVersionChanging(string value);
    partial void OnPCVersionChanged();
    partial void OnIOSVersionChanging(string value);
    partial void OnIOSVersionChanged();
    partial void OnAndroidVersionChanging(string value);
    partial void OnAndroidVersionChanged();
    #endregion
		
		public VersionMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCVersion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PCVersion
		{
			get
			{
				return this._PCVersion;
			}
			set
			{
				if ((this._PCVersion != value))
				{
					this.OnPCVersionChanging(value);
					this.SendPropertyChanging();
					this._PCVersion = value;
					this.SendPropertyChanged("PCVersion");
					this.OnPCVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IOSVersion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IOSVersion
		{
			get
			{
				return this._IOSVersion;
			}
			set
			{
				if ((this._IOSVersion != value))
				{
					this.OnIOSVersionChanging(value);
					this.SendPropertyChanging();
					this._IOSVersion = value;
					this.SendPropertyChanged("IOSVersion");
					this.OnIOSVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidVersion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AndroidVersion
		{
			get
			{
				return this._AndroidVersion;
			}
			set
			{
				if ((this._AndroidVersion != value))
				{
					this.OnAndroidVersionChanging(value);
					this.SendPropertyChanging();
					this._AndroidVersion = value;
					this.SendPropertyChanged("AndroidVersion");
					this.OnAndroidVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersOTP")]
	public partial class UsersOTP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _UserId;
		
		private long _OTP;
		
		private string _IPAddress;
		
		private string _DeviceID;
		
		private string _DeviceType;
		
		private string _LatLong;
		
		private System.DateTime _OTPSentTime;
		
		private System.Nullable<bool> _OTPSent;
		
		private System.Nullable<bool> _IsVerified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnOTPChanging(long value);
    partial void OnOTPChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnDeviceIDChanging(string value);
    partial void OnDeviceIDChanged();
    partial void OnDeviceTypeChanging(string value);
    partial void OnDeviceTypeChanged();
    partial void OnLatLongChanging(string value);
    partial void OnLatLongChanged();
    partial void OnOTPSentTimeChanging(System.DateTime value);
    partial void OnOTPSentTimeChanged();
    partial void OnOTPSentChanging(System.Nullable<bool> value);
    partial void OnOTPSentChanged();
    partial void OnIsVerifiedChanging(System.Nullable<bool> value);
    partial void OnIsVerifiedChanged();
    #endregion
		
		public UsersOTP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTP", DbType="BigInt NOT NULL")]
		public long OTP
		{
			get
			{
				return this._OTP;
			}
			set
			{
				if ((this._OTP != value))
				{
					this.OnOTPChanging(value);
					this.SendPropertyChanging();
					this._OTP = value;
					this.SendPropertyChanged("OTP");
					this.OnOTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="NVarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="NVarChar(50)")]
		public string DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceType", DbType="NChar(10)")]
		public string DeviceType
		{
			get
			{
				return this._DeviceType;
			}
			set
			{
				if ((this._DeviceType != value))
				{
					this.OnDeviceTypeChanging(value);
					this.SendPropertyChanging();
					this._DeviceType = value;
					this.SendPropertyChanged("DeviceType");
					this.OnDeviceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LatLong", DbType="NVarChar(50)")]
		public string LatLong
		{
			get
			{
				return this._LatLong;
			}
			set
			{
				if ((this._LatLong != value))
				{
					this.OnLatLongChanging(value);
					this.SendPropertyChanging();
					this._LatLong = value;
					this.SendPropertyChanged("LatLong");
					this.OnLatLongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPSentTime", DbType="DateTime NOT NULL")]
		public System.DateTime OTPSentTime
		{
			get
			{
				return this._OTPSentTime;
			}
			set
			{
				if ((this._OTPSentTime != value))
				{
					this.OnOTPSentTimeChanging(value);
					this.SendPropertyChanging();
					this._OTPSentTime = value;
					this.SendPropertyChanged("OTPSentTime");
					this.OnOTPSentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPSent", DbType="Bit")]
		public System.Nullable<bool> OTPSent
		{
			get
			{
				return this._OTPSent;
			}
			set
			{
				if ((this._OTPSent != value))
				{
					this.OnOTPSentChanging(value);
					this.SendPropertyChanging();
					this._OTPSent = value;
					this.SendPropertyChanged("OTPSent");
					this.OnOTPSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVerified", DbType="Bit")]
		public System.Nullable<bool> IsVerified
		{
			get
			{
				return this._IsVerified;
			}
			set
			{
				if ((this._IsVerified != value))
				{
					this.OnIsVerifiedChanging(value);
					this.SendPropertyChanging();
					this._IsVerified = value;
					this.SendPropertyChanged("IsVerified");
					this.OnIsVerifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetUserHierarchyWiseResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserName;
		
		public GetUserHierarchyWiseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(103)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	public partial class GetEmployeeHeirarchyResult
	{
		
		private System.Nullable<int> _UserId;
		
		private string _UserName;
		
		public GetEmployeeHeirarchyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
